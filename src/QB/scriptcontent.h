#pragma once
	/*
	calculate the checksum from a script without its function name / SCRIPT header (:i function $myfunctionname$ / SCRIPT myfunctionname)
	to decompile, add this header for an arbitrary script name: 23 16 EF BE AD DE 01
	QScript also requires two nullbytes at the end of the file: 00 00
	*/


const uint8_t enter_kb_chat_new[] = { //0x3B4548B8 
	/*
		SCRIPT enter_kb_chat 
			change keyboard_text_block_width = 530 
			create_onscreen_keyboard allow_cancel no_buttons pos = PAIR(320.00000000000, 260.00000000000) keyboard_done_script = entered_chat_message display_text = "ENTER MESSAGE: " keyboard_title = "ENTER MESSAGE" min_length = 1 max_length = 512 text_block 
			change keyboard_text_block_width = 360 
		ENDSCRIPT
	*/
	0x01, 0x16, 0xDF, 0x01, 0xA8, 0xBF, 0x16, 0xCA, 0xAF, 0xCF, 0x7B, 0x07, 0x17, 0x12, 0x02, 0x00,
	0x00, 0x01, 0x16, 0x54, 0x52, 0x42, 0xF0, 0x16, 0x85, 0xD2, 0xCE, 0xB1, 0x16, 0x9D, 0x56, 0xB7,
	0x02, 0x16, 0x53, 0x19, 0x26, 0x7F, 0x07, 0x1F, 0x00, 0x00, 0xA0, 0x43, 0x00, 0x00, 0x82, 0x43,
	0x16, 0x7F, 0xD4, 0xB7, 0x5D, 0x07, 0x16, 0x0B, 0x85, 0x4C, 0x5D, 0x16, 0x79, 0xB5, 0x1E, 0x4F,
	0x07, 0x1B, 0x10, 0x00, 0x00, 0x00, 0x45, 0x4E, 0x54, 0x45, 0x52, 0x20, 0x4D, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x3A, 0x20, 0x00, 0x16, 0x78, 0xCE, 0x92, 0xA5, 0x07, 0x1B, 0x0E, 0x00, 0x00,
	0x00, 0x45, 0x4E, 0x54, 0x45, 0x52, 0x20, 0x4D, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x00, 0x16,
	0x70, 0x3B, 0xEF, 0x68, 0x07, 0x17, 0x01, 0x00, 0x00, 0x00, 0x16, 0xC4, 0xA1, 0xE3, 0x69, 0x07,
	0x17, 0x00, 0x02, 0x00, 0x00, 0x16, 0x80, 0xD2, 0x50, 0x2A, 0x01, 0x16, 0xDF, 0x01, 0xA8, 0xBF,
	0x16, 0xCA, 0xAF, 0xCF, 0x7B, 0x07, 0x17, 0x68, 0x01, 0x00, 0x00, 0x01, 0x24, 0x01
};

const uint8_t integer_val_zero[] = {
	0x17, 0x00, 0x00, 0x00, 0x00, 0x01
};

const uint8_t float_val_zero[] = {
	0x1A, 0x00, 0x00, 0x00, 0x00, 0x01
};

const uint8_t float_val_hundred[] = {
	0x1A, 0x00, 0x00, 0xC8, 0x42, 0x01
};

const uint8_t colormenu_min_value_new[] = {
	/*
		colormenu_min_value = 0.0
	*/
	0x16, 0x6F, 0x0D, 0x6B, 0xB2, 0x07, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x01
};

const uint8_t colormenu_max_value_new[] = {
	/*
		colormenu_max_value = 100.0

	*/
	0x16, 0x2E, 0xBF, 0x80, 0x65, 0x07, 0x1A, 0x00, 0x00, 0xC8, 0x42, 0x01
};

const uint8_t colormenu_min_saturation_new[] = {
	/*
		colormenu_min_saturation = 0.0
	*/
	0x16, 0xED, 0xA1, 0xBB, 0x63, 0x07, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x01
};

const uint8_t colormenu_max_saturation_new[] = {
	/*
		colormenu_max_saturation = 100.0

	*/
	0x16, 0x9C, 0x3A, 0x9D, 0xDA, 0x07, 0x1A, 0x00, 0x00, 0xC8, 0x42, 0x01
};

const uint8_t showboard_myan[] = { //0x3DBD296D
	/*
		skater : SwitchOnBoard
		endscript
	*/
	0x01, 0x16, 0x77, 0xB8, 0x8A, 0x5B, 0x42, 0x16, 0x00, 0xC4, 0xC8, 0xC4, 0x01, 0x24, 0x01
};

const uint8_t scalingmenu_get_limits_new[] = { //0x9F95228A
	/*
		SCRIPT scalingmenu_get_limits 
			GetCurrentSkaterProfileIndex 
			GetSkaterProfileInfo player = <currentSkaterProfileIndex> 
			GetArraySize scalingmenu_constraints 
			<index> = 0 
			BEGIN 
				IF ChecksumEquals a = ( ( scalingmenu_constraints [ <index> ] ) . part ) b = <part> 
					<min> = 0.00000000000 
					<max> = -nan 
					BREAK 
				ENDIF 
				<index> = ( <index> + 1 ) 
			REPEAT <array_size> 
			IF NOT GotParam min 
				<min> = 0.00000000000 
			ENDIF 
			IF NOT GotParam max 
				<max> = -nan 
			ENDIF 
			RETURN min = <min> max = <max> 
		ENDSCRIPT
	*/
	0x01, 0x16, 0x31, 0xBE, 0x5C, 0xD0, 0x01, 0x16, 0xF4, 0xB1, 0x74, 0x6D, 0x16, 0x9A, 0x85, 0xE6,
	0x67, 0x07, 0x2D, 0x16, 0x6B, 0x47, 0x64, 0x3C, 0x01, 0x16, 0xB0, 0xC4, 0xB5, 0x39,	0x16, 0xB6,
	0xFE, 0x12, 0x52, 0x01, 0x2D, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x07, 0x17, 0x00, 0x00, 0x00, 0x00,
	0x01, 0x20, 0x01, 0x25, 0x16, 0x9C, 0xDE, 0x0C, 0x94, 0x16, 0xBC, 0x41, 0x48, 0x17, 0x07, 0x0E,
	0x0E, 0x16, 0xB6, 0xFE, 0x12, 0x52, 0x05, 0x2D, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x06, 0x0F, 0x08,
	0x16, 0x39, 0x8F, 0xF0, 0xB6, 0x0F, 0x16, 0x06, 0x10, 0x41, 0x8E, 0x07, 0x2D, 0x16, 0x39, 0x8F,
	0xF0, 0xB6, 0x01, 0x2D, 0x16, 0x2F, 0xE2, 0x84, 0x5E, 0x07, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x2D, 0x16, 0x76, 0xDD, 0x89, 0x62, 0x07, 0x1A, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x22, 0x01, 0x28,
	0x01, 0x2D, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x07, 0x0E, 0x2D, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x0B,
	0x17, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x01, 0x21, 0x2D, 0x16, 0x4D, 0x3D, 0x5B, 0x7F, 0x01, 0x25,
	0x39, 0x16, 0x7B, 0x71, 0x66, 0xCF, 0x16, 0x2F, 0xE2, 0x84, 0x5E, 0x01, 0x2D, 0x16, 0x2F, 0xE2,
	0x84, 0x5E, 0x07, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x01, 0x28, 0x01, 0x25, 0x39, 0x16, 0x7B, 0x71,
	0x66, 0xCF, 0x16, 0x76, 0xDD, 0x89, 0x62, 0x01, 0x2D, 0x16, 0x76, 0xDD, 0x89, 0x62, 0x07, 0x1A,
	0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x28, 0x01, 0x29, 0x16, 0x2F, 0xE2, 0x84, 0x5E, 0x07, 0x2D, 0x16,
	0x2F, 0xE2, 0x84, 0x5E, 0x16, 0x76, 0xDD, 0x89, 0x62, 0x07, 0x2D, 0x16, 0x76, 0xDD, 0x89, 0x62,
	0x01, 0x24, 0x01
};

const uint8_t scalingmenu_spacing_between_new[] = {
	/*
		scalingmenu_spacing_between = 20
	*/
	0x16, 0x58, 0xCE, 0xC8, 0xFA, 0x07, 0x17, 0x14, 0x00, 0x00, 0x00, 0x01
};

const uint8_t skateshop_scaling_options_new[] = {
	/*
		skateshop_scaling_options = [ 
		{ 
			group_title = "SCALE OPTIONS" 
			text = "Body" 
			submenu = face_scale_menu 
			should_add_scaling_options 
			scaling_params = { affectX affectY affectZ affectXYZ } 
			bone_group = object_scaling
			is_visible_script = currently_editing_custom 
		} 
		{ 
			text = "Head Top" 
			submenu = face_scale_menu 
			should_add_scaling_options 
			scaling_params = { affectX affectY affectZ affectXYZ } 
			bone_group = headtop_bone_group 
			is_visible_script = currently_editing_custom 
			is_enabled_script = check_if_group_editable 
			is_enabled_params = { group = head_items } 
			cam_anim_sub = head 
		} 
		{ 
			text = "Head" 
			submenu = face_scale_menu 
			should_add_scaling_options 
			scaling_params = { affectX affectY affectZ affectXYZ } 
			bone_group = head_bone_group 
			is_visible_script = currently_editing_custom 
			is_enabled_script = check_if_group_editable 
			is_enabled_params = { group = head_items } 
			cam_anim_sub = head 
		} 
		{ 
			text = "Nose" 
			submenu = face_scale_menu 
			should_add_scaling_options 
			scaling_params = { affectX affectY affectZ affectXYZ } 
			bone_group = nose_bone_group 
			is_visible_script = currently_editing_custom 
			is_enabled_script = check_if_group_editable 
			is_enabled_params = { group = head_items } 
			cam_anim_sub = head 
		} 
		{ 
			text = "jaw" 
			submenu = face_scale_menu 
			should_add_scaling_options 
			scaling_params = { affectX affectY affectZ affectXYZ } 
			bone_group = Jaw_bone_group 
			is_visible_script = currently_editing_custom 
			is_enabled_script = check_if_group_editable 
			is_enabled_params = { group = head_items } 
			cam_anim_sub = head 
		} 
		{ 
			text = "Chest" 
			submenu = torso_scale_menu 
			scaling_params = { affectX affectY affectZ affectXYZ } 
			is_visible_script = currently_editing_custom 
			should_add_scaling_options 
			bone_group = torso_bone_group 
			cam_anim_sub = adjtorso 
		} 
		{ 
			text = "Waist" 
			submenu = stomach_scale_menu 
			scaling_params = { affectX affectY affectZ affectXYZ } 
			is_visible_script = currently_editing_custom 
			should_add_scaling_options 
			bone_group = stomach_bone_group 
			cam_anim_sub = adjtorso 
		} 
		{ 
			text = "Biceps" 
			submenu = upper_arm_scale_menu 
			scaling_params = { affectX affectY affectZ affectXYZ } 
			is_visible_script = currently_editing_custom 
			should_add_scaling_options 
			bone_group = upper_arm_bone_group 
			cam_anim_sub = adjtorso 
		} 
		{ 
			text = "Forearms" 
			submenu = lower_arm_scale_menu 
			scaling_params = { affectX affectY affectZ affectXYZ } 
			is_visible_script = currently_editing_custom 
			should_add_scaling_options 
			bone_group = lower_arm_bone_group 
			cam_anim_sub = adjtorso 
		} 
		{ 
			text = "Hands" 
			submenu = hands_scale_menu 
			scaling_params = { affectX affectY affectZ affectXYZ } 
			is_visible_script = currently_editing_custom 
			should_add_scaling_options 
			bone_group = hands_bone_group 
			cam_anim_sub = legs 
		} 
		{ 
			text = "Thighs" 
			submenu = upper_leg_scale_menu 
			scaling_params = { affectX affectY affectZ affectXYZ } 
			is_visible_script = currently_editing_custom 
			should_add_scaling_options 
			bone_group = upper_leg_bone_group 
			cam_anim_sub = legs 
		} 
		{ 
			text = "Calves" 
			submenu = lower_leg_scale_menu 
			scaling_params = { affectX affectY affectZ affectXYZ } 
			is_visible_script = currently_editing_custom 
			should_add_scaling_options 
			bone_group = lower_leg_bone_group 
			cam_anim_sub = feet 
		} 
		{ 
			text = "Feet" 
			submenu = feet_scale_menu 
			scaling_params = { affectX affectY affectZ affectXYZ } 
			is_visible_script = currently_editing_custom 
			should_add_scaling_options 
			bone_group = feet_bone_group 
			cam_anim_sub = feet 
		} 
		{ 
			text = "Board" 
			submenu = face_scale_menu 
			scaling_params = { affectX affectY affectZ affectXYZ } 
			is_visible_script = currently_editing_custom 
			should_add_scaling_options 
			bone_group = board_bone_group 
		} ]
	*/
	0x16, 0xAF, 0x4C, 0xBE, 0xD2, 0x07, 0x05, 0x01, 0x03, 0x01, 0x16, 0xF3, 0xAC, 0xE5, 0x84, 0x07,
	0x1B, 0x0E, 0x00, 0x00, 0x00, 0x53, 0x43, 0x41, 0x4C, 0x45, 0x20, 0x4F, 0x50, 0x54, 0x49, 0x4F,
	0x4E, 0x53, 0x00, 0x01, 0x16, 0x38, 0x58, 0x74, 0xC4, 0x07, 0x1C, 0x05, 0x00, 0x00, 0x00, 0x42,
	0x6F, 0x64, 0x79, 0x00, 0x01, 0x16, 0xE7, 0xB7, 0x4F, 0x5B, 0x07, 0x16, 0x0E, 0xA1, 0x48, 0x27,
	0x01, 0x16, 0x34, 0xF4, 0x27, 0xAF, 0x01, 0x16, 0x8E, 0x68, 0xA6, 0x6A, 0x07, 0x03, 0x16, 0xCE,
	0x3E, 0x69, 0xD4, 0x16, 0x58, 0x0E, 0x6E, 0xA3, 0x16, 0xE2, 0x5F, 0x67, 0x3A, 0x16, 0x9F, 0x69,
	0x35, 0xDA, 0x04, 0x01, 0x16, 0x80, 0xD5, 0x68, 0x00, 0x07, 0x16, 0x58, 0x43, 0x31, 0x8B, 0x01,
	0x16, 0xCC, 0x99, 0xEA, 0x64, 0x07, 0x16, 0x1B, 0x97, 0xFB, 0x80, 0x01, 0x04, 0x01, 0x03, 0x01,
	0x16, 0x38, 0x58, 0x74, 0xC4, 0x07, 0x1C, 0x09, 0x00, 0x00, 0x00, 0x48, 0x65, 0x61, 0x64, 0x20,
	0x54, 0x6F, 0x70, 0x00, 0x01, 0x16, 0xE7, 0xB7, 0x4F, 0x5B, 0x07, 0x16, 0x0E, 0xA1, 0x48, 0x27,
	0x01, 0x16, 0x34, 0xF4, 0x27, 0xAF, 0x01, 0x16, 0x8E, 0x68, 0xA6, 0x6A, 0x07, 0x03, 0x16, 0xCE,
	0x3E, 0x69, 0xD4, 0x16, 0x58, 0x0E, 0x6E, 0xA3, 0x16, 0xE2, 0x5F, 0x67, 0x3A, 0x16, 0x9F, 0x69,
	0x35, 0xDA, 0x04, 0x01, 0x16, 0x80, 0xD5, 0x68, 0x00, 0x07, 0x16, 0xD0, 0x08, 0x0F, 0xB9, 0x01,
	0x16, 0xCC, 0x99, 0xEA, 0x64, 0x07, 0x16, 0x1B, 0x97, 0xFB, 0x80, 0x01, 0x16, 0x72, 0xF4, 0x88,
	0xBE, 0x07, 0x16, 0xDF, 0xA1, 0xB3, 0x2D, 0x01, 0x16, 0xBB, 0x7D, 0xC7, 0x2D, 0x07, 0x03, 0x16,
	0x3A, 0xBB, 0x3F, 0x92, 0x07, 0x16, 0x47, 0x7B, 0xED, 0x71, 0x04, 0x01, 0x16, 0x3E, 0xF1, 0xF2,
	0x7E, 0x07, 0x16, 0x63, 0x09, 0x0C, 0x58, 0x01, 0x04, 0x01, 0x03, 0x01, 0x16, 0x38, 0x58, 0x74,
	0xC4, 0x07, 0x1C, 0x05, 0x00, 0x00, 0x00, 0x48, 0x65, 0x61, 0x64, 0x00, 0x01, 0x16, 0xE7, 0xB7,
	0x4F, 0x5B, 0x07, 0x16, 0x0E, 0xA1, 0x48, 0x27, 0x01, 0x16, 0x34, 0xF4, 0x27, 0xAF, 0x01, 0x16,
	0x8E, 0x68, 0xA6, 0x6A, 0x07, 0x03, 0x16, 0xCE, 0x3E, 0x69, 0xD4, 0x16, 0x58, 0x0E, 0x6E, 0xA3,
	0x16, 0xE2, 0x5F, 0x67, 0x3A, 0x16, 0x9F, 0x69, 0x35, 0xDA, 0x04, 0x01, 0x16, 0x80, 0xD5, 0x68,
	0x00, 0x07, 0x16, 0x7F, 0xAB, 0x8F, 0xA2, 0x01, 0x16, 0xCC, 0x99, 0xEA, 0x64, 0x07, 0x16, 0x1B,
	0x97, 0xFB, 0x80, 0x01, 0x16, 0x72, 0xF4, 0x88, 0xBE, 0x07, 0x16, 0xDF, 0xA1, 0xB3, 0x2D, 0x01,
	0x16, 0xBB, 0x7D, 0xC7, 0x2D, 0x07, 0x03, 0x16, 0x3A, 0xBB, 0x3F, 0x92, 0x07, 0x16, 0x47, 0x7B,
	0xED, 0x71, 0x04, 0x01, 0x16, 0x3E, 0xF1, 0xF2, 0x7E, 0x07, 0x16, 0x63, 0x09, 0x0C, 0x58, 0x01,
	0x04, 0x01, 0x03, 0x01, 0x16, 0x38, 0x58, 0x74, 0xC4, 0x07, 0x1C, 0x05, 0x00, 0x00, 0x00, 0x4E,
	0x6F, 0x73, 0x65, 0x00, 0x01, 0x16, 0xE7, 0xB7, 0x4F, 0x5B, 0x07, 0x16, 0x0E, 0xA1, 0x48, 0x27,
	0x01, 0x16, 0x34, 0xF4, 0x27, 0xAF, 0x01, 0x16, 0x8E, 0x68, 0xA6, 0x6A, 0x07, 0x03, 0x16, 0xCE,
	0x3E, 0x69, 0xD4, 0x16, 0x58, 0x0E, 0x6E, 0xA3, 0x16, 0xE2, 0x5F, 0x67, 0x3A, 0x16, 0x9F, 0x69,
	0x35, 0xDA, 0x04, 0x01, 0x16, 0x80, 0xD5, 0x68, 0x00, 0x07, 0x16, 0xE8, 0xFA, 0xBC, 0x1D, 0x01,
	0x16, 0xCC, 0x99, 0xEA, 0x64, 0x07, 0x16, 0x1B, 0x97, 0xFB, 0x80, 0x01, 0x16, 0x72, 0xF4, 0x88,
	0xBE, 0x07, 0x16, 0xDF, 0xA1, 0xB3, 0x2D, 0x01, 0x16, 0xBB, 0x7D, 0xC7, 0x2D, 0x07, 0x03, 0x16,
	0x3A, 0xBB, 0x3F, 0x92, 0x07, 0x16, 0x47, 0x7B, 0xED, 0x71, 0x04, 0x01, 0x16, 0x3E, 0xF1, 0xF2,
	0x7E, 0x07, 0x16, 0x63, 0x09, 0x0C, 0x58, 0x01, 0x04, 0x01, 0x03, 0x01, 0x16, 0x38, 0x58, 0x74,
	0xC4, 0x07, 0x1C, 0x04, 0x00, 0x00, 0x00, 0x6A, 0x61, 0x77, 0x00, 0x01, 0x16, 0xE7, 0xB7, 0x4F,
	0x5B, 0x07, 0x16, 0x0E, 0xA1, 0x48, 0x27, 0x01, 0x16, 0x34, 0xF4, 0x27, 0xAF, 0x01, 0x16, 0x8E,
	0x68, 0xA6, 0x6A, 0x07, 0x03, 0x16, 0xCE, 0x3E, 0x69, 0xD4, 0x16, 0x58, 0x0E, 0x6E, 0xA3, 0x16,
	0xE2, 0x5F, 0x67, 0x3A, 0x16, 0x9F, 0x69, 0x35, 0xDA, 0x04, 0x01, 0x16, 0x80, 0xD5, 0x68, 0x00,
	0x07, 0x16, 0xC1, 0xD3, 0x42, 0x04, 0x01, 0x16, 0xCC, 0x99, 0xEA, 0x64, 0x07, 0x16, 0x1B, 0x97,
	0xFB, 0x80, 0x01, 0x16, 0x72, 0xF4, 0x88, 0xBE, 0x07, 0x16, 0xDF, 0xA1, 0xB3, 0x2D, 0x01, 0x16,
	0xBB, 0x7D, 0xC7, 0x2D, 0x07, 0x03, 0x16, 0x3A, 0xBB, 0x3F, 0x92, 0x07, 0x16, 0x47, 0x7B, 0xED,
	0x71, 0x04, 0x01, 0x16, 0x3E, 0xF1, 0xF2, 0x7E, 0x07, 0x16, 0x63, 0x09, 0x0C, 0x58, 0x01, 0x04,
	0x01, 0x03, 0x01, 0x16, 0x38, 0x58, 0x74, 0xC4, 0x07, 0x1C, 0x06, 0x00, 0x00, 0x00, 0x43, 0x68,
	0x65, 0x73, 0x74, 0x00, 0x01, 0x16, 0xE7, 0xB7, 0x4F, 0x5B, 0x07, 0x16, 0x41, 0x56, 0xE6, 0x25,
	0x01, 0x16, 0x8E, 0x68, 0xA6, 0x6A, 0x07, 0x03, 0x16, 0xCE, 0x3E, 0x69, 0xD4, 0x16, 0x58, 0x0E,
	0x6E, 0xA3, 0x16, 0xE2, 0x5F, 0x67, 0x3A, 0x16, 0x9F, 0x69, 0x35, 0xDA, 0x04, 0x01, 0x16, 0xCC,
	0x99, 0xEA, 0x64, 0x07, 0x16, 0x1B, 0x97, 0xFB, 0x80, 0x01, 0x16, 0x34, 0xF4, 0x27, 0xAF, 0x01,
	0x16, 0x80, 0xD5, 0x68, 0x00, 0x07, 0x16, 0x7A, 0x32, 0x07, 0xAF, 0x01, 0x16, 0x3E, 0xF1, 0xF2,
	0x7E, 0x07, 0x16, 0xE1, 0x8F, 0x77, 0xB1, 0x01, 0x04, 0x01, 0x03, 0x01, 0x16, 0x38, 0x58, 0x74,
	0xC4, 0x07, 0x1C, 0x06, 0x00, 0x00, 0x00, 0x57, 0x61, 0x69, 0x73, 0x74, 0x00, 0x01, 0x16, 0xE7,
	0xB7, 0x4F, 0x5B, 0x07, 0x16, 0x9F, 0x80, 0x22, 0x54, 0x01, 0x16, 0x8E, 0x68, 0xA6, 0x6A, 0x07,
	0x03, 0x16, 0xCE, 0x3E, 0x69, 0xD4, 0x16, 0x58, 0x0E, 0x6E, 0xA3, 0x16, 0xE2, 0x5F, 0x67, 0x3A,
	0x16, 0x9F, 0x69, 0x35, 0xDA, 0x04, 0x01, 0x16, 0xCC, 0x99, 0xEA, 0x64, 0x07, 0x16, 0x1B, 0x97,
	0xFB, 0x80, 0x01, 0x16, 0x34, 0xF4, 0x27, 0xAF, 0x01, 0x16, 0x80, 0xD5, 0x68, 0x00, 0x07, 0x16,
	0xA4, 0xE4, 0xC3, 0xDE, 0x01, 0x16, 0x3E, 0xF1, 0xF2, 0x7E, 0x07, 0x16, 0xE1, 0x8F, 0x77, 0xB1,
	0x01, 0x04, 0x01, 0x03, 0x01, 0x16, 0x38, 0x58, 0x74, 0xC4, 0x07, 0x1C, 0x07, 0x00, 0x00, 0x00,
	0x42, 0x69, 0x63, 0x65, 0x70, 0x73, 0x00, 0x01, 0x16, 0xE7, 0xB7, 0x4F, 0x5B, 0x07, 0x16, 0xDA,
	0x15, 0x65, 0xA0, 0x01, 0x16, 0x8E, 0x68, 0xA6, 0x6A, 0x07, 0x03, 0x16, 0xCE, 0x3E, 0x69, 0xD4,
	0x16, 0x58, 0x0E, 0x6E, 0xA3, 0x16, 0xE2, 0x5F, 0x67, 0x3A, 0x16, 0x9F, 0x69, 0x35, 0xDA, 0x04,
	0x01, 0x16, 0xCC, 0x99, 0xEA, 0x64, 0x07, 0x16, 0x1B, 0x97, 0xFB, 0x80, 0x01, 0x16, 0x34, 0xF4,
	0x27, 0xAF, 0x01, 0x16, 0x80, 0xD5, 0x68, 0x00, 0x07, 0x16, 0xE1, 0x71, 0x84, 0x2A, 0x01, 0x16,
	0x3E, 0xF1, 0xF2, 0x7E, 0x07, 0x16, 0xE1, 0x8F, 0x77, 0xB1, 0x01, 0x04, 0x01, 0x03, 0x01, 0x16,
	0x38, 0x58, 0x74, 0xC4, 0x07, 0x1C, 0x09, 0x00, 0x00, 0x00, 0x46, 0x6F, 0x72, 0x65, 0x61, 0x72,
	0x6D, 0x73, 0x00, 0x01, 0x16, 0xE7, 0xB7, 0x4F, 0x5B, 0x07, 0x16, 0xAB, 0xF4, 0xEC, 0x09, 0x01,
	0x16, 0x8E, 0x68, 0xA6, 0x6A, 0x07, 0x03, 0x16, 0xCE, 0x3E, 0x69, 0xD4, 0x16, 0x58, 0x0E, 0x6E,
	0xA3, 0x16, 0xE2, 0x5F, 0x67, 0x3A, 0x16, 0x9F, 0x69, 0x35, 0xDA, 0x04, 0x01, 0x16, 0xCC, 0x99,
	0xEA, 0x64, 0x07, 0x16, 0x1B, 0x97, 0xFB, 0x80, 0x01, 0x16, 0x34, 0xF4, 0x27, 0xAF, 0x01, 0x16,
	0x80, 0xD5, 0x68, 0x00, 0x07, 0x16, 0x90, 0x90, 0x0D, 0x83, 0x01, 0x16, 0x3E, 0xF1, 0xF2, 0x7E,
	0x07, 0x16, 0xE1, 0x8F, 0x77, 0xB1, 0x01, 0x04, 0x01, 0x03, 0x01, 0x16, 0x38, 0x58, 0x74, 0xC4,
	0x07, 0x1C, 0x06, 0x00, 0x00, 0x00, 0x48, 0x61, 0x6E, 0x64, 0x73, 0x00, 0x01, 0x16, 0xE7, 0xB7,
	0x4F, 0x5B, 0x07, 0x16, 0xDC, 0x0E, 0xB1, 0x05, 0x01, 0x16, 0x8E, 0x68, 0xA6, 0x6A, 0x07, 0x03,
	0x16, 0xCE, 0x3E, 0x69, 0xD4, 0x16, 0x58, 0x0E, 0x6E, 0xA3, 0x16, 0xE2, 0x5F, 0x67, 0x3A, 0x16,
	0x9F, 0x69, 0x35, 0xDA, 0x04, 0x01, 0x16, 0xCC, 0x99, 0xEA, 0x64, 0x07, 0x16, 0x1B, 0x97, 0xFB,
	0x80, 0x01, 0x16, 0x34, 0xF4, 0x27, 0xAF, 0x01, 0x16, 0x80, 0xD5, 0x68, 0x00, 0x07, 0x16, 0xE7,
	0x6A, 0x50, 0x8F, 0x01, 0x16, 0x3E, 0xF1, 0xF2, 0x7E, 0x07, 0x16, 0x75, 0xBC, 0xE7, 0x02, 0x01,
	0x04, 0x01, 0x03, 0x01, 0x16, 0x38, 0x58, 0x74, 0xC4, 0x07, 0x1C, 0x07, 0x00, 0x00, 0x00, 0x54,
	0x68, 0x69, 0x67, 0x68, 0x73, 0x00, 0x01, 0x16, 0xE7, 0xB7, 0x4F, 0x5B, 0x07, 0x16, 0x62, 0x2D,
	0xDC, 0x34, 0x01, 0x16, 0x8E, 0x68, 0xA6, 0x6A, 0x07, 0x03, 0x16, 0xCE, 0x3E, 0x69, 0xD4, 0x16,
	0x58, 0x0E, 0x6E, 0xA3, 0x16, 0xE2, 0x5F, 0x67, 0x3A, 0x16, 0x9F, 0x69, 0x35, 0xDA, 0x04, 0x01,
	0x16, 0xCC, 0x99, 0xEA, 0x64, 0x07, 0x16, 0x1B, 0x97, 0xFB, 0x80, 0x01, 0x16, 0x34, 0xF4, 0x27,
	0xAF, 0x01, 0x16, 0x80, 0xD5, 0x68, 0x00, 0x07, 0x16, 0x59, 0x49, 0x3D, 0xBE, 0x01, 0x16, 0x3E,
	0xF1, 0xF2, 0x7E, 0x07, 0x16, 0x75, 0xBC, 0xE7, 0x02, 0x01, 0x04, 0x01, 0x03, 0x01, 0x16, 0x38,
	0x58, 0x74, 0xC4, 0x07, 0x1C, 0x07, 0x00, 0x00, 0x00, 0x43, 0x61, 0x6C, 0x76, 0x65, 0x73, 0x00,
	0x01, 0x16, 0xE7, 0xB7, 0x4F, 0x5B, 0x07, 0x16, 0x13, 0xCC, 0x55, 0x9D, 0x01, 0x16, 0x8E, 0x68,
	0xA6, 0x6A, 0x07, 0x03, 0x16, 0xCE, 0x3E, 0x69, 0xD4, 0x16, 0x58, 0x0E, 0x6E, 0xA3, 0x16, 0xE2,
	0x5F, 0x67, 0x3A, 0x16, 0x9F, 0x69, 0x35, 0xDA, 0x04, 0x01, 0x16, 0xCC, 0x99, 0xEA, 0x64, 0x07,
	0x16, 0x1B, 0x97, 0xFB, 0x80, 0x01, 0x16, 0x34, 0xF4, 0x27, 0xAF, 0x01, 0x16, 0x80, 0xD5, 0x68,
	0x00, 0x07, 0x16, 0x28, 0xA8, 0xB4, 0x17, 0x01, 0x16, 0x3E, 0xF1, 0xF2, 0x7E, 0x07, 0x16, 0x30,
	0xAB, 0x08, 0xC1, 0x01, 0x04, 0x01, 0x03, 0x01, 0x16, 0x38, 0x58, 0x74, 0xC4, 0x07, 0x1C, 0x05,
	0x00, 0x00, 0x00, 0x46, 0x65, 0x65, 0x74, 0x00, 0x01, 0x16, 0xE7, 0xB7, 0x4F, 0x5B, 0x07, 0x16,
	0x5B, 0x50, 0xBC, 0x09, 0x01, 0x16, 0x8E, 0x68, 0xA6, 0x6A, 0x07, 0x03, 0x16, 0xCE, 0x3E, 0x69,
	0xD4, 0x16, 0x58, 0x0E, 0x6E, 0xA3, 0x16, 0xE2, 0x5F, 0x67, 0x3A, 0x16, 0x9F, 0x69, 0x35, 0xDA,
	0x04, 0x01, 0x16, 0xCC, 0x99, 0xEA, 0x64, 0x07, 0x16, 0x1B, 0x97, 0xFB, 0x80, 0x01, 0x16, 0x34,
	0xF4, 0x27, 0xAF, 0x01, 0x16, 0x80, 0xD5, 0x68, 0x00, 0x07, 0x16, 0x60, 0x34, 0x5D, 0x83, 0x01,
	0x16, 0x3E, 0xF1, 0xF2, 0x7E, 0x07, 0x16, 0x30, 0xAB, 0x08, 0xC1, 0x01, 0x04, 0x01, 0x03, 0x01,
	0x16, 0x38, 0x58, 0x74, 0xC4, 0x07, 0x1C, 0x06, 0x00, 0x00, 0x00, 0x42, 0x6F, 0x61, 0x72, 0x64,
	0x00, 0x01, 0x16, 0xE7, 0xB7, 0x4F, 0x5B, 0x07, 0x16, 0x0E, 0xA1, 0x48, 0x27, 0x01, 0x16, 0x8E,
	0x68, 0xA6, 0x6A, 0x07, 0x03, 0x16, 0xCE, 0x3E, 0x69, 0xD4, 0x16, 0x58, 0x0E, 0x6E, 0xA3, 0x16,
	0xE2, 0x5F, 0x67, 0x3A, 0x16, 0x9F, 0x69, 0x35, 0xDA, 0x04, 0x01, 0x16, 0xCC, 0x99, 0xEA, 0x64,
	0x07, 0x16, 0x1B, 0x97, 0xFB, 0x80, 0x01, 0x16, 0x34, 0xF4, 0x27, 0xAF, 0x01, 0x16, 0x80, 0xD5,
	0x68, 0x00, 0x07, 0x16, 0x3C, 0x01, 0x66, 0xAC, 0x01, 0x04, 0x01, 0x06, 0x01
};

//0x33317668 LoadInternetOptions_AbortAndDoneScript_myan
const uint8_t LoadInternetOptions_AbortAndDoneScript_myan[] = {
	/*
		SCRIPT LoadInternetOptions_AbortAndDoneScript_myan
			memcard_menus_cleanup
			ResetAbortAndDoneScripts
			create_internet_options
		ENDSCRIPT
	*/
	0x01, 0x16, 0xE6, 0x11, 0xDF, 0xCC, 0x01, 0x16, 0x54, 0xC8, 0x45, 0x7E, 0x01, 0x16, 0x74, 0x9B, 0xED, 0xB9, 0x01, 0x24, 0x01
};

//0x1C253B2E LoadInternetOptions_RetryScript_myan
const uint8_t LoadInternetOptions_RetryScript_myan[] = {
	/*
		SCRIPT LoadInternetOptions_RetryScript_myan
			%memcard_menus_cleanup% 
			%Goto% %0xFE4E9AAD% 
		ENDSCRIPT
	*/
	0x01, 0x16, 0xE6, 0x11, 0xDF, 0xCC, 0x01, 0x16, 0x7F, 0xA3, 0x9F, 0xAD, 0x16, 0xAD, 0x9A, 0x4E, 0xFE, 0x01, 0x24, 0x01
};

//0x07440DFA LoadInternetOptions_PadChooseScript_myan
const uint8_t LoadInternetOptions_PadChooseScript_myan[] = {
	/*
		SCRIPT %0x07440DFA% 
			destroy_internet_options_menu%
			Change RetryScript = LoadInternetOptions_RetryScript_myan
			Change AbortScript = LoadInternetOptions_AbortAndDoneScript_myan
			Change DoneScript = LoadInternetOptions_AbortAndDoneScript_myan
			Change SavingOrLoading = Loading
			check_card FileType = NetworkSettings 
			launch_files_menu FileType = NetworkSettings
		ENDSCRIPT
	*/
	0x01, 0x16, 0x30, 0xCE, 0x5D, 0xD7, 0x01, 0x16, 0xDF, 0x01, 0xA8, 0xBF, 0x16, 0x40, 0xDD, 0x71, 0x92, 0x07, 0x16, 0x2E,
	0x3B, 0x25, 0x1C, 0x01, 0x16, 0xDF, 0x01, 0xA8, 0xBF, 0x16, 0x9F, 0xD9, 0xFB, 0x08, 0x07, 0x16, 0x68, 0x76, 0x31, 0x33,
	0x01, 0x16, 0xDF, 0x01, 0xA8, 0xBF, 0x16, 0xA4, 0x8A, 0x0F, 0xF6, 0x07, 0x16, 0x68, 0x76, 0x31, 0x33, 0x01, 0x16, 0xDF,
	0x01, 0xA8, 0xBF, 0x16, 0x37, 0x4A, 0x0F, 0x17, 0x07, 0x16, 0x4B, 0xC7, 0x9F, 0xA8, 0x01, 0x16, 0xAD, 0x13, 0x6B, 0x0C,
	0x16, 0xB5, 0x3F, 0x09, 0x11, 0x07, 0x16, 0x2D, 0x69, 0x41, 0xCA, 0x01, 0x16, 0x85, 0x41, 0x3F, 0x5A, 0x16, 0xB5, 0x3F,
	0x09, 0x11, 0x07, 0x16, 0x2D, 0x69, 0x41, 0xCA, 0x01, 0x24, 0x01
};

//0x926D3E69 LoadInternetOptions_HelperDesc_myan
const uint8_t LoadInternetOptions_HelperDesc_myan[] = {
	/*
		LoadInternetOptions_HelperDesc_myan = { helper_desc_elements = [ { string = "Load your profile and all online settings" } ] } 
	*/
	0x16, 0x69, 0x3E, 0x6D, 0x92, 0x07, 0x03, 0x16, 0x77, 0x18, 0x00, 0xBB, 0x07, 0x05, 0x03, 0x16, 0x56, 0x4D, 0x41, 0x61,
	0x07, 0x1B, 0x2A, 0x00, 0x00, 0x00, 0x4C, 0x6F, 0x61, 0x64, 0x20, 0x79, 0x6F, 0x75, 0x72, 0x20, 0x70, 0x72, 0x6F, 0x66,
	0x69, 0x6C, 0x65, 0x20, 0x61, 0x6E, 0x64, 0x20, 0x61, 0x6C, 0x6C, 0x20, 0x6F, 0x6E, 0x6C, 0x69, 0x6E, 0x65, 0x20, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6E, 0x67, 0x73, 0x00, 0x04, 0x06, 0x04, 0x01
};

const uint8_t edit_skater_create_options_menu_new[] = { //0xFA23D9E3
	/*
		SCRIPT edit_skater_create_options_menu 
			pad_back_script = edit_skater_create_main_menu
			KillSpawnedScript name = cas_pull_back_camera
			change pulled_back = 0
			IF StructureContains structure = (<options_array>[0]) group_title
				title = ((<options_array>[0]).group_title)
			ENDIF
			IF StructureContains structure = (<options_array>[0]) cad_part
				cad_part = ((<options_array>[0]).cad_part)
			ENDIF
			IF GotParam title
				IF NOT GotParam title_icon
					FormatText ChecksumName = title_icon "i_edit_skater" i = (THEME_PREFIXES[current_theme_prefix])
				ENDIF
				build_theme_sub_title title = <title> title_icon = <title_icon>
			ENDIF
			IF GotParam category
				change current_cas_category = <category>
			ELSE
				change current_cas_category = 0
			ENDIF
			edit_skater_create_menu_block {
				tab_texture = tab2
				middle_texture = repeat_piece2
				bottom_texture = menu_bottom
			}
			IF GotParam cam_anim
				IF NOT(<cam_anim> = fullbody)
					create_helper_text generic_helper_text_cas_z
				ELSE
					create_helper_text generic_helper_text_cas
				ENDIF
			ELSE
				IF((in_deck_design = 1) | (in_boardshop = 1))
					create_helper_text generic_helper_text
				ELSE
					create_helper_text generic_helper_text_cas
				ENDIF
			ENDIF
			IF GotParam parent_index
				change edit_skater_menu_level_1_index = <parent_index>
			ENDIF
			IF(in_deck_design = 1)
				pad_back_script = edit_skater_create_main_deck_menu
			ELSE
				IF(in_boardshop = 1)
				ELSE
					skater : SwitchOffBoard
				ENDIF
			ENDIF
			IF(in_boardshop = 1)
				pad_back_script = boardshop_create_main_menu
			ENDIF
			edit_skater_create_scrolling_menu {
				tab = tab2
				pad_back_script = <pad_back_script>
				pad_back_params = <pad_back_params>
			}
			IF GotParam cad_part
				get_part_current_desc_id part = <cad_part>
				IF GotParam current_desc_id
					get_logo_texture part = <cad_part> desc_id = <current_desc_id>
					IF ScreenElementExists id = deck_layer_graphic
						DestroyScreenElement id = deck_layer_graphic
					ENDIF
					IF StructureContains structure = (<options_array>[0]) deck_scaling
						rot_angle = -90
						scale = PAIR(0.50000000000, 0.89999997616)
					ELSE
						rot_angle = 0
						scale = 1.00000000000
					ENDIF
					CreateScreenElement {
						type = SpriteElement
						parent = edit_skater_anchor_middle
						id = deck_layer_graphic
						texture = <texture>
						scale = <scale>
						rot_angle = <rot_angle>
						pos = PAIR(185.00000000000, 125.00000000000)
						just = [center center]
						z_priority = 5
					}
				ENDIF
			ENDIF
			category_menu_set_focus
			IF GotParam options_array
				GetArraySize <options_array>
				<index> = 0
				BEGIN
					RemoveParameter not_focusable
					RemoveParameter is_enabled_script
					RemoveParameter is_visible_script
					check_option_is_enabled(<options_array>[<index>])
					IF(<is_enabled> = 0)
						addparams not_focusable = not_focusable
					ENDIF
					check_option_is_visible(<options_array>[<index>])
					IF NOT(<is_visible> = 0)
						edit_skater_menu_add_item {
							(<options_array>[<index>])
							tab = tab2
							index = <index>
							options_array = <options_array>
							not_focusable = <not_focusable>
							cam_anim = <cam_anim>
							category = <category>
							should_add_reset_tattoos = <should_add_reset_tattoos>
							should_add_reset_scaling = <should_add_reset_scaling>
						}
					ENDIF
					<index> = (<index> +1)
				REPEAT <array_size>
			ENDIF
			IF GotParam should_add_reset_tattoos
				edit_skater_menu_add_item {
					text = #"Clear all tattoos"
					pad_choose_script = cas_reset_all_tattoos
					tab = tab2
				}
			ENDIF
			IF GotParam should_add_reset_scaling
				edit_skater_menu_add_item {
					text = #"Reset all"
					pad_choose_script = cas_reset_all_scaling
					tab = tab2
				}
			ENDIF
			edit_skater_menu_add_item {
				text = #"Done"
				pad_choose_script = <pad_back_script>
				tab = tab2
			}
			IF GotParam cam_anim
				KillSkaterCamAnim all
				cas_setup_rotating_camera cam_anim = <cam_anim>
			ENDIF
			IF NOT GotParam from_level_1
				FireEvent type = focus target = current_menu data = { grid_index = edit_skater_menu_level_2_index }
			ELSE
				FireEvent type = focus targer = current_menu
			ENDIF
		ENDSCRIPT
	*/
	0x16, 0xA2, 0xC3, 0x2B, 0x19, 0x07, 0x16, 0xCB, 0x84, 0x90, 0x3D, 0x01, 0x16, 0x2D, 0xC0, 0x0D,
	0xCD, 0x16, 0xF9, 0x81, 0xDC, 0xA1, 0x07, 0x16, 0x96, 0xBD, 0x10, 0x74, 0x01, 0x16, 0xDF, 0x01,
	0xA8, 0xBF, 0x16, 0x47, 0xFD, 0x0B, 0xFB, 0x07, 0x17, 0x00, 0x00, 0x00, 0x00, 0x01, 0x25, 0x16,
	0xCD, 0x04, 0xEF, 0xDE, 0x16, 0x15, 0xC8, 0xFE, 0x90, 0x07, 0x0E, 0x2D, 0x16, 0xEB, 0xAC, 0x86,
	0x9F, 0x05, 0x17, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0F, 0x16, 0xF3, 0xAC, 0xE5, 0x84, 0x01, 0x16,
	0x94, 0x87, 0xC9, 0xD4, 0x07, 0x0E, 0x0E, 0x2D, 0x16, 0xEB, 0xAC, 0x86, 0x9F, 0x05, 0x17, 0x00,
	0x00, 0x00, 0x00, 0x06, 0x0F, 0x08, 0x16, 0xF3, 0xAC, 0xE5, 0x84, 0x0F, 0x01, 0x28, 0x01, 0x25,
	0x16, 0xCD, 0x04, 0xEF, 0xDE, 0x16, 0x15, 0xC8, 0xFE, 0x90, 0x07, 0x0E, 0x2D, 0x16, 0xEB, 0xAC,
	0x86, 0x9F, 0x05, 0x17, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0F, 0x16, 0x13, 0x7A, 0x15, 0xA8, 0x01,
	0x16, 0x13, 0x7A, 0x15, 0xA8, 0x07, 0x0E, 0x0E, 0x2D, 0x16, 0xEB, 0xAC, 0x86, 0x9F, 0x05, 0x17,
	0x00, 0x00, 0x00, 0x00, 0x06, 0x0F, 0x08, 0x16, 0x13, 0x7A, 0x15, 0xA8, 0x0F, 0x01, 0x28, 0x01,
	0x25, 0x16, 0x7B, 0x71, 0x66, 0xCF, 0x16, 0x94, 0x87, 0xC9, 0xD4, 0x01, 0x25, 0x39, 0x16, 0x7B,
	0x71, 0x66, 0xCF, 0x16, 0x5B, 0x0C, 0xB1, 0xD1, 0x01, 0x16, 0x28, 0xF4, 0x77, 0x92, 0x16, 0x8F,
	0x7A, 0xFA, 0x76, 0x07, 0x16, 0x5B, 0x0C, 0xB1, 0xD1, 0x1B, 0x0F, 0x00, 0x00, 0x00, 0x25, 0x69,
	0x5F, 0x65, 0x64, 0x69, 0x74, 0x5F, 0x73, 0x6B, 0x61, 0x74, 0x65, 0x72, 0x00, 0x16, 0x8E, 0xC9,
	0x93, 0x19, 0x07, 0x0E, 0x16, 0x72, 0x40, 0x45, 0x6C, 0x05, 0x16, 0xD6, 0xF3, 0xC7, 0x43, 0x06,
	0x0F, 0x01, 0x28, 0x01, 0x16, 0x9B, 0x74, 0x9F, 0x0B, 0x16, 0x94, 0x87, 0xC9, 0xD4, 0x07, 0x2D,
	0x16, 0x94, 0x87, 0xC9, 0xD4, 0x16, 0x5B, 0x0C, 0xB1, 0xD1, 0x07, 0x2D, 0x16, 0x5B, 0x0C, 0xB1,
	0xD1, 0x01, 0x28, 0x01, 0x25, 0x16, 0x7B, 0x71, 0x66, 0xCF, 0x16, 0x3E, 0xE6, 0xB3, 0xF9, 0x01,
	0x16, 0xDF, 0x01, 0xA8, 0xBF, 0x16, 0xDF, 0x06, 0xF6, 0x66, 0x07, 0x2D, 0x16, 0x3E, 0xE6, 0xB3,
	0xF9, 0x01, 0x26, 0x01, 0x16, 0xDF, 0x01, 0xA8, 0xBF, 0x16, 0xDF, 0x06, 0xF6, 0x66, 0x07, 0x17,
	0x00, 0x00, 0x00, 0x00, 0x01, 0x28, 0x01, 0x16, 0xF6, 0xA4, 0x19, 0x06, 0x03, 0x01, 0x16, 0x68,
	0x9A, 0x3F, 0x05, 0x07, 0x16, 0x9A, 0xEE, 0xEF, 0xEC, 0x01, 0x16, 0x42, 0x08, 0x7F, 0x19, 0x07,
	0x16, 0x69, 0xC1, 0x95, 0xEC, 0x01, 0x16, 0x45, 0x53, 0x0F, 0x1D, 0x07, 0x16, 0x83, 0xD5, 0xE7,
	0xA5, 0x01, 0x04, 0x01, 0x25, 0x16, 0x7B, 0x71, 0x66, 0xCF, 0x16, 0x46, 0x3F, 0xBE, 0xA1, 0x01,
	0x25, 0x39, 0x0E, 0x2D, 0x16, 0x46, 0x3F, 0xBE, 0xA1, 0x07, 0x16, 0xE5, 0xF7, 0x11, 0xEB, 0x0F,
	0x01, 0x16, 0xE0, 0x91, 0x3A, 0xC7, 0x16, 0x54, 0x48, 0x86, 0x4F, 0x01, 0x26, 0x01, 0x16, 0xE0,
	0x91, 0x3A, 0xC7, 0x16, 0x23, 0xCE, 0x3B, 0x09, 0x01, 0x28, 0x01, 0x26, 0x01, 0x25, 0x0E, 0x0E,
	0x16, 0x0D, 0xAC, 0x89, 0x20, 0x07, 0x17, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x32, 0x0E, 0x16, 0x6F,
	0xBD, 0x85, 0x8A, 0x07, 0x17, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x01, 0x16, 0xE0, 0x91, 0x3A,
	0xC7, 0x16, 0xC0, 0xAD, 0x1C, 0xF3, 0x01, 0x26, 0x01, 0x16, 0xE0, 0x91, 0x3A, 0xC7, 0x16, 0x23,
	0xCE, 0x3B, 0x09, 0x01, 0x28, 0x01, 0x28, 0x01, 0x25, 0x16, 0x7B, 0x71, 0x66, 0xCF, 0x16, 0x5D,
	0x0C, 0xBD, 0xB3, 0x01, 0x16, 0xDF, 0x01, 0xA8, 0xBF, 0x16, 0x57, 0xE3, 0x90, 0x08, 0x07, 0x2D,
	0x16, 0x5D, 0x0C, 0xBD, 0xB3, 0x01, 0x28, 0x01, 0x25, 0x0E, 0x16, 0x0D, 0xAC, 0x89, 0x20, 0x07,
	0x17, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x01, 0x16, 0xA2, 0xC3, 0x2B, 0x19, 0x07, 0x16, 0x0D, 0x01,
	0xAF, 0x79, 0x01, 0x26, 0x01, 0x25, 0x0E, 0x16, 0x6F, 0xBD, 0x85, 0x8A, 0x07, 0x17, 0x01, 0x00,
	0x00, 0x00, 0x0F, 0x01, 0x26, 0x01, 0x16, 0x77, 0xB8, 0x8A, 0x5B, 0x42, 0x16, 0x88, 0x7A, 0xD2,
	0xF8, 0x01, 0x28, 0x01, 0x28, 0x01, 0x25, 0x0E, 0x16, 0x6F, 0xBD, 0x85, 0x8A, 0x07, 0x17, 0x01,
	0x00, 0x00, 0x00, 0x0F, 0x01, 0x16, 0xA2, 0xC3, 0x2B, 0x19, 0x07, 0x16, 0x38, 0x1C, 0x5F, 0x97,
	0x01, 0x28, 0x01, 0x16, 0x4F, 0x64, 0x78, 0x71, 0x03, 0x01, 0x16, 0xF3, 0xBC, 0x1C, 0x8C, 0x07,
	0x16, 0x9A, 0xEE, 0xEF, 0xEC, 0x01, 0x16, 0xA2, 0xC3, 0x2B, 0x19, 0x07, 0x2D, 0x16, 0xA2, 0xC3,
	0x2B, 0x19, 0x01, 0x16, 0x6B, 0x4A, 0x64, 0x8A, 0x07, 0x2D, 0x16, 0x6B, 0x4A, 0x64, 0x8A, 0x01,
	0x04, 0x01, 0x25, 0x16, 0x7B, 0x71, 0x66, 0xCF, 0x16, 0x13, 0x7A, 0x15, 0xA8, 0x01, 0x16, 0x58,
	0x69, 0x37, 0x4A, 0x16, 0x39, 0x8F, 0xF0, 0xB6, 0x07, 0x2D, 0x16, 0x13, 0x7A, 0x15, 0xA8, 0x01,
	0x25, 0x16, 0x7B, 0x71, 0x66, 0xCF, 0x16, 0xCB, 0x8D, 0xBF, 0xE1, 0x01, 0x16, 0x47, 0xC5, 0xE5,
	0xB6, 0x16, 0x39, 0x8F, 0xF0, 0xB6, 0x07, 0x2D, 0x16, 0x13, 0x7A, 0x15, 0xA8, 0x16, 0x4E, 0x08,
	0xB2, 0x4B, 0x07, 0x2D, 0x16, 0xCB, 0x8D, 0xBF, 0xE1, 0x01, 0x25, 0x16, 0xEE, 0x93, 0xBC, 0xC5,
	0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0x88, 0x81, 0x8A, 0x28, 0x01, 0x16, 0xB6, 0xE9, 0x15,
	0x3C, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0x88, 0x81, 0x8A, 0x28, 0x01, 0x28, 0x01, 0x25,
	0x16, 0xCD, 0x04, 0xEF, 0xDE, 0x16, 0x15, 0xC8, 0xFE, 0x90, 0x07, 0x0E, 0x2D, 0x16, 0xEB, 0xAC,
	0x86, 0x9F, 0x05, 0x17, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0F, 0x16, 0x84, 0xF6, 0xF1, 0x0F, 0x01,
	0x16, 0x1B, 0x4E, 0x34, 0xED, 0x07, 0x17, 0xA6, 0xFF, 0xFF, 0xFF, 0x01, 0x16, 0x7B, 0xDA, 0xB9,
	0x13, 0x07, 0x1F, 0x00, 0x00, 0x00, 0x3F, 0x66, 0x66, 0x66, 0x3F, 0x01, 0x26, 0x01, 0x16, 0x1B,
	0x4E, 0x34, 0xED, 0x07, 0x17, 0x00, 0x00, 0x00, 0x00, 0x01, 0x16, 0x7B, 0xDA, 0xB9, 0x13, 0x07,
	0x1A, 0x00, 0x00, 0x80, 0x3F, 0x01, 0x28, 0x01, 0x16, 0x40, 0x51, 0x66, 0x73, 0x03, 0x01, 0x16,
	0xD6, 0xA8, 0x21, 0x73, 0x07, 0x16, 0x0A, 0x51, 0x2B, 0xB1, 0x01, 0x16, 0xB0, 0x9F, 0x71, 0xC2,
	0x07, 0x16, 0xEE, 0x56, 0x63, 0x86, 0x01, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0x88, 0x81,
	0x8A, 0x28, 0x01, 0x16, 0x8D, 0xF2, 0x99, 0x7D, 0x07, 0x2D, 0x16, 0x8D, 0xF2, 0x99, 0x7D, 0x01,
	0x16, 0x7B, 0xDA, 0xB9, 0x13, 0x07, 0x2D, 0x16, 0x7B, 0xDA, 0xB9, 0x13, 0x01, 0x16, 0x1B, 0x4E,
	0x34, 0xED, 0x07, 0x2D, 0x16, 0x1B, 0x4E, 0x34, 0xED, 0x01, 0x16, 0x53, 0x19, 0x26, 0x7F, 0x07,
	0x1F, 0x00, 0x00, 0x39, 0x43, 0x00, 0x00, 0xFA, 0x42, 0x01, 0x16, 0x2F, 0x02, 0x60, 0x8B, 0x07,
	0x05, 0x16, 0xDB, 0x14, 0x0F, 0xBF, 0x16, 0xDB, 0x14, 0x0F, 0xBF, 0x06, 0x01, 0x16, 0x31, 0x0F,
	0x71, 0x57, 0x07, 0x17, 0x05, 0x00, 0x00, 0x00, 0x01, 0x04, 0x01, 0x28, 0x01, 0x28, 0x01, 0x16,
	0x79, 0x6D, 0x9E, 0xF1, 0x01, 0x25, 0x16, 0x7B, 0x71, 0x66, 0xCF, 0x16, 0xEB, 0xAC, 0x86, 0x9F,
	0x01, 0x16, 0xB0, 0xC4, 0xB5, 0x39, 0x2D, 0x16, 0xEB, 0xAC, 0x86, 0x9F, 0x01, 0x2D, 0x16, 0xFE,
	0x98, 0x8C, 0x7F, 0x07, 0x17, 0x00, 0x00, 0x00, 0x00, 0x01, 0x20, 0x01, 0x16, 0x02, 0xED, 0x56,
	0x70, 0x16, 0x26, 0x44, 0x94, 0x1D, 0x01, 0x16, 0x02, 0xED, 0x56, 0x70, 0x16, 0x72, 0xF4, 0x88,
	0xBE, 0x01, 0x16, 0x02, 0xED, 0x56, 0x70, 0x16, 0xCC, 0x99, 0xEA, 0x64, 0x01, 0x16, 0x30, 0x6F,
	0xC9, 0xA8, 0x0E, 0x2D, 0x16, 0xEB, 0xAC, 0x86, 0x9F, 0x05, 0x2D, 0x16, 0xFE, 0x98, 0x8C, 0x7F,
	0x06, 0x0F, 0x01, 0x25, 0x0E, 0x2D, 0x16, 0xB3, 0xC2, 0x3A, 0xB9, 0x07, 0x17, 0x00, 0x00, 0x00,
	0x00, 0x0F, 0x01, 0x16, 0x51, 0x17, 0xBA, 0x47, 0x16, 0x26, 0x44, 0x94, 0x1D, 0x07, 0x16, 0x26,
	0x44, 0x94, 0x1D, 0x01, 0x28, 0x01, 0x16, 0xED, 0x3C, 0x80, 0x82, 0x0E, 0x2D, 0x16, 0xEB, 0xAC,
	0x86, 0x9F, 0x05, 0x2D, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x06, 0x0F, 0x01, 0x25, 0x39, 0x0E, 0x2D,
	0x16, 0x6E, 0x91, 0x73, 0x93, 0x07, 0x17, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x01, 0x16, 0xCE, 0x5F,
	0xD5, 0x3A, 0x03, 0x01, 0x0E, 0x2D, 0x16, 0xEB, 0xAC, 0x86, 0x9F, 0x05, 0x2D, 0x16, 0xFE, 0x98,
	0x8C, 0x7F, 0x06, 0x0F, 0x01, 0x16, 0xF3, 0xBC, 0x1C, 0x8C, 0x07, 0x16, 0x9A, 0xEE, 0xEF, 0xEC,
	0x01, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x07, 0x2D, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x01, 0x16, 0xEB,
	0xAC, 0x86, 0x9F, 0x07, 0x2D, 0x16, 0xEB, 0xAC, 0x86, 0x9F, 0x01, 0x16, 0x26, 0x44, 0x94, 0x1D,
	0x07, 0x2D, 0x16, 0x26, 0x44, 0x94, 0x1D, 0x01, 0x16, 0x46, 0x3F, 0xBE, 0xA1, 0x07, 0x2D, 0x16,
	0x46, 0x3F, 0xBE, 0xA1, 0x01, 0x16, 0x3E, 0xE6, 0xB3, 0xF9, 0x07, 0x2D, 0x16, 0x3E, 0xE6, 0xB3,
	0xF9, 0x01, 0x16, 0xE3, 0xED, 0x67, 0x63, 0x07, 0x2D, 0x16, 0xE3, 0xED, 0x67, 0x63, 0x01, 0x16,
	0x6A, 0x8C, 0xE9, 0xD1, 0x07, 0x2D, 0x16, 0x6A, 0x8C, 0xE9, 0xD1, 0x01, 0x04, 0x01, 0x28, 0x01,
	0x2D, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x07, 0x0E, 0x2D, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x0B, 0x17,
	0x01, 0x00, 0x00, 0x00, 0x0F, 0x01, 0x21, 0x2D, 0x16, 0x4D, 0x3D, 0x5B, 0x7F, 0x01, 0x28, 0x01,
	0x25, 0x16, 0x7B, 0x71, 0x66, 0xCF, 0x16, 0xE3, 0xED, 0x67, 0x63, 0x01, 0x16, 0xCE, 0x5F, 0xD5,
	0x3A, 0x03, 0x01, 0x16, 0x38, 0x58, 0x74, 0xC4, 0x07, 0x1C, 0x12, 0x00, 0x00, 0x00, 0x43, 0x6C,
	0x65, 0x61, 0x72, 0x20, 0x61, 0x6C, 0x6C, 0x20, 0x74, 0x61, 0x74, 0x74, 0x6F, 0x6F, 0x73, 0x00,
	0x01, 0x16, 0xA1, 0xFC, 0x0C, 0x2B, 0x07, 0x16, 0x9D, 0x84, 0xB9, 0xBA, 0x01, 0x16, 0xF3, 0xBC,
	0x1C, 0x8C, 0x07, 0x16, 0x9A, 0xEE, 0xEF, 0xEC, 0x01, 0x04, 0x01, 0x28, 0x01, 0x25, 0x16, 0x7B,
	0x71, 0x66, 0xCF, 0x16, 0x6A, 0x8C, 0xE9, 0xD1, 0x01, 0x16, 0xCE, 0x5F, 0xD5, 0x3A, 0x03, 0x01,
	0x16, 0x38, 0x58, 0x74, 0xC4, 0x07, 0x1C, 0x0A, 0x00, 0x00, 0x00, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x20, 0x61, 0x6C, 0x6C, 0x00, 0x01, 0x16, 0xA1, 0xFC, 0x0C, 0x2B, 0x07, 0x16, 0x14, 0xE5, 0x37,
	0x08, 0x01, 0x16, 0xF3, 0xBC, 0x1C, 0x8C, 0x07, 0x16, 0x9A, 0xEE, 0xEF, 0xEC, 0x01, 0x04, 0x01,
	0x28, 0x01, 0x16, 0xCE, 0x5F, 0xD5, 0x3A, 0x03, 0x01, 0x16, 0x38, 0x58, 0x74, 0xC4, 0x07, 0x1C,
	0x05, 0x00, 0x00, 0x00, 0x44, 0x6F, 0x6E, 0x65, 0x00, 0x01, 0x16, 0xA1, 0xFC, 0x0C, 0x2B, 0x07,
	0x2D, 0x16, 0xA2, 0xC3, 0x2B, 0x19, 0x01, 0x16, 0xF3, 0xBC, 0x1C, 0x8C, 0x07, 0x16, 0x9A, 0xEE,
	0xEF, 0xEC, 0x01, 0x04, 0x01, 0x25, 0x16, 0x7B, 0x71, 0x66, 0xCF, 0x16, 0x46, 0x3F, 0xBE, 0xA1,
	0x01, 0x16, 0x60, 0x58, 0x9A, 0x23, 0x16, 0x22, 0x8E, 0xE7, 0xC4, 0x01, 0x16, 0xB3, 0x85, 0xE8,
	0xB8, 0x16, 0x46, 0x3F, 0xBE, 0xA1, 0x07, 0x2D, 0x16, 0x46, 0x3F, 0xBE, 0xA1, 0x01, 0x28, 0x01,
	0x25, 0x39, 0x16, 0x7B, 0x71, 0x66, 0xCF, 0x16, 0xED, 0x1A, 0xB8, 0xA7, 0x01, 0x16, 0xBE, 0x0A,
	0x69, 0x27, 0x16, 0xD6, 0xA8, 0x21, 0x73, 0x07, 0x16, 0x16, 0xB5, 0x3F, 0x9D, 0x16, 0x03, 0xD0,
	0x90, 0xB9, 0x07, 0x16, 0x0A, 0xAC, 0x49, 0x4D, 0x16, 0x9C, 0x0C, 0x0C, 0x52, 0x07, 0x03, 0x16,
	0x8B, 0x9A, 0xCF, 0xFA, 0x07, 0x16, 0xCA, 0xF9, 0x78, 0x39, 0x04, 0x01, 0x26, 0x01, 0x16, 0xBE,
	0x0A, 0x69, 0x27, 0x16, 0xD6, 0xA8, 0x21, 0x73, 0x07, 0x16, 0x16, 0xB5, 0x3F, 0x9D, 0x16, 0x03,
	0xD0, 0x90, 0xB9, 0x07, 0x16, 0x0A, 0xAC, 0x49, 0x4D, 0x01, 0x28, 0x01, 0x24, 0x01
};


const uint8_t kill_net_panel_messages_new[] = { //0x0C42890C
	/*
		SCRIPT kill_net_panel_messages 
			IF ObjectExists id = net_panel_msg 
				DestroyScreenElement id = net_panel_msg 
			ENDIF 
			IF ObjectExists id = taunt_msg_id 
				DestroyScreenElement id = taunt_msg_id 
			ENDIF 
			IF ScreenElementExists id = perfect 
				DestroyScreenElement id = perfect 
			ENDIF 
			IF ScreenElementExists id = perfect2 
				DestroyScreenElement id = perfect2 
			ENDIF 
			IF ScreenElementExists id = death_message 
				DestroyScreenElement id = death_message 
			ENDIF 
			IF ObjectExists id = speech_box_anchor 
				DoScreenElementMorph id = speech_box_anchor scale = 0 
			ENDIF 
			IF ScreenElementExists id = goal_start_dialog 
				DestroyScreenElement id = goal_start_dialog 
			ENDIF 
			IF ObjectExists id = ped_speech_dialog 
				DestroyScreenElement id = ped_speech_dialog 
			ENDIF 
			IF ObjectExists id = goal_retry_anchor 
				DestroyScreenElement id = goal_retry_anchor 
			ENDIF 
			IF ObjectExists id = first_time_goal_info 
				DestroyScreenElement id = first_time_goal_info 
			ENDIF 
			IF ObjectExists id = skater_hint 
				DestroyScreenElement id = skater_hint 
			ENDIF 
			GetArraySize goal_panel_message_ids 
			<index> = 0 
			BEGIN 
				IF ScreenElementExists id = ( goal_panel_message_ids [ <index> ] ) 
					DestroyScreenElement id = ( goal_panel_message_ids [ <index> ] ) 
				ENDIF 
				<index> = ( <index> + 1 ) 
			REPEAT <array_size> 
		ENDSCRIPT
	*/
	0x01, 0x25, 0x16, 0x31, 0x21, 0x7B, 0x43, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0x9B, 0x41, 
	0xBE, 0x85, 0x01, 0x16, 0xB6, 0xE9, 0x15, 0x3C, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0x9B,
	0x41, 0xBE, 0x85, 0x01, 0x28, 0x01, 0x25, 0x16, 0x31, 0x21, 0x7B, 0x43, 0x16, 0xAF, 0x98, 0xC6, 
	0x40, 0x07, 0x16, 0x3E, 0x8D, 0x93, 0x7E, 0x01, 0x16, 0xB6, 0xE9, 0x15, 0x3C, 0x16, 0xAF, 0x98,
	0xC6, 0x40, 0x07, 0x16, 0x3E, 0x8D, 0x93, 0x7E, 0x01, 0x28, 0x01, 0x25, 0x16, 0xEE, 0x93, 0xBC,
	0xC5, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0xB9, 0xF1, 0x39, 0x1C, 0x01, 0x16, 0xB6, 0xE9,
	0x15, 0x3C, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0xB9, 0xF1, 0x39, 0x1C, 0x01, 0x28, 0x01,
	0x25, 0x16, 0xEE, 0x93, 0xBC, 0xC5, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0x59, 0x63, 0x76, 
	0x7A, 0x01, 0x16, 0xB6, 0xE9, 0x15, 0x3C, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0x59, 0x63, 
	0x76, 0x7A, 0x01, 0x28, 0x01, 0x25, 0x16, 0xEE, 0x93, 0xBC, 0xC5, 0x16, 0xAF, 0x98, 0xC6, 0x40,
	0x07, 0x16, 0x60, 0x53, 0xA4, 0xA0, 0x01, 0x16, 0xB6, 0xE9, 0x15, 0x3C, 0x16, 0xAF, 0x98, 0xC6, 
	0x40, 0x07, 0x16, 0x60, 0x53, 0xA4, 0xA0, 0x01, 0x28, 0x01, 0x25, 0x16, 0x31, 0x21, 0x7B, 0x43, 
	0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0x99, 0x8E, 0xCD, 0xFB, 0x01, 0x16, 0x47, 0x74, 0x7D, 
	0xF5, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0x99, 0x8E, 0xCD, 0xFB, 0x16, 0x7B, 0xDA, 0xB9, 
	0x13, 0x07, 0x17, 0x00, 0x00, 0x00, 0x00, 0x01, 0x28, 0x01, 0x25, 0x16, 0xEE, 0x93, 0xBC, 0xC5, 
	0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0x6C, 0x24, 0xA0, 0x55, 0x01, 0x16, 0xB6, 0xE9, 0x15, 
	0x3C, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0x6C, 0x24, 0xA0, 0x55, 0x01, 0x28, 0x01, 0x25, 
	0x16, 0x31, 0x21, 0x7B, 0x43, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0x4B, 0x4D, 0x86, 0xDA, 
	0x01, 0x16, 0xB6, 0xE9, 0x15, 0x3C, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0x4B, 0x4D, 0x86, 
	0xDA, 0x01, 0x28, 0x01, 0x25, 0x16, 0x31, 0x21, 0x7B, 0x43, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 
	0x16, 0x6A, 0xE5, 0xCF, 0xD9, 0x01, 0x16, 0xB6, 0xE9, 0x15, 0x3C, 0x16, 0xAF, 0x98, 0xC6, 0x40, 
	0x07, 0x16, 0x6A, 0xE5, 0xCF, 0xD9, 0x01, 0x28, 0x01, 0x25, 0x16, 0x31, 0x21, 0x7B, 0x43, 0x16,
	0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0xBC, 0xBA, 0x62, 0x52, 0x01, 0x16, 0xB6, 0xE9, 0x15, 0x3C,
	0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0xBC, 0xBA, 0x62, 0x52, 0x01, 0x28, 0x01, 0x25, 0x16,
	0x31, 0x21, 0x7B, 0x43, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0x36, 0xC4, 0x18, 0x89, 0x01,
	0x16, 0xB6, 0xE9, 0x15, 0x3C, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0x36, 0xC4, 0x18, 0x89,
	0x01, 0x28, 0x01, 0x16, 0xB0, 0xC4, 0xB5, 0x39, 0x16, 0xBB, 0xBB, 0xF5, 0x40, 0x01, 0x2D, 0x16,
	0xFE, 0x98, 0x8C, 0x7F, 0x07, 0x17, 0x00, 0x00, 0x00, 0x00, 0x01, 0x20, 0x01, 0x25, 0x16, 0xEE,
	0x93, 0xBC, 0xC5, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x0E, 0x16, 0xBB, 0xBB, 0xF5, 0x40, 0x05,
	0x2D, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x06, 0x0F, 0x01, 0x16, 0xB6, 0xE9, 0x15, 0x3C, 0x16, 0xAF,
	0x98, 0xC6, 0x40, 0x07, 0x0E, 0x16, 0xBB, 0xBB, 0xF5, 0x40, 0x05, 0x2D, 0x16, 0xFE, 0x98, 0x8C,
	0x7F, 0x06, 0x0F, 0x01, 0x28, 0x01, 0x2D, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x07, 0x0E, 0x2D, 0x16,
	0xFE, 0x98, 0x8C, 0x7F, 0x0B, 0x17, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x01, 0x21, 0x2D, 0x16, 0x4D, 
	0x3D, 0x5B, 0x7F, 0x01, 0x24, 0x01
};

const uint8_t create_console_message_new[] = { //0xCCB19938 
	/*
		SCRIPT create_console_message text = "Default console message" rgba = [ 113 121 127 80 ] 
			IF NOT GetGlobalFlag flag = NO_DISPLAY_CHATWINDOW 
				IF NOT ObjectExists id = console_message_vmenu 
					create_console 
				ENDIF 
				SetScreenElementLock id = console_message_vmenu off 
				IF ScreenElementExists id = { console_message_vmenu child = ( number_of_console_lines - 1 ) } 
					DestroyScreenElement id = { console_message_vmenu child = 0 } 
				ENDIF 
				IF LevelIs load_skateshop 
					dims = PAIR(750.00000000000, 10.00000000000) 
					pos = PAIR(50.00000000000, 240.00000000000) 
					change number_of_console_lines = 7 
					max_chat_height = 150 
				ELSE 
					dims = PAIR(750.00000000000, 10.00000000000) 
					pos = PAIR(20.00000000000, 265.00000000000) 
					change number_of_console_lines = 6 
					max_chat_height = 96 
				ENDIF 
				IF GotParam join 
					rgba = [ 0 80 0 80 ] 
				ELSE 
					IF GotParam left 
						rgba = [ 80 0 0 80 ] 
					ENDIF 
				ENDIF 
				SetScreenElementProps id = console_message_vmenu pos = <pos> 
				CreateScreenElement { 
					type = TextBlockElement 
					parent = console_message_vmenu 
					font = dialog 
					text = <text> 
					internal_just = [ left top ] 
					rgba = <rgba> 
					scale = 0.80000001192 
					not_focusable 
					dims = <dims> 
					allow_expansion 
					z_priority = 5 
				} 
				BEGIN 
					total_height = 0 
					index = number_of_console_lines 
					BEGIN 
						IF ScreenElementExists id = { console_message_vmenu child = ( number_of_console_lines - <index> ) } 
							GetScreenElementDims id = { console_message_vmenu child = ( number_of_console_lines - <index> ) } 
							<total_height> = ( <total_height> + <height> ) 
							<index> = ( <index> - 1 ) 
						ELSE 
							BREAK 
						ENDIF 
					REPEAT 
					IF ( <total_height> > <max_chat_height> ) 
						DestroyScreenElement id = { console_message_vmenu child = 0 } 
					ELSE 
						BREAK 
					ENDIF 
				REPEAT 
				IF GotParam wait_and_die 
					RunScriptOnScreenElement id = <id> console_message_wait_and_die params = { time = <time> <...> } 
					RETURN 
				ENDIF 
				IF NOT LevelIs load_skateshop 
					IF NOT GotParam dont_die 
						RunScriptOnScreenElement id = <id> console_message_wait_and_die <...>
					ENDIF 
				ENDIF 
			ENDIF 
		ENDSCRIPT
	*/
	0x16, 0x38, 0x58, 0x74, 0xC4, 0x07, 0x1B, 0x18, 0x00, 0x00, 0x00, 0x44, 0x65, 0x66, 0x61, 
	0x75, 0x6C, 0x74, 0x20, 0x63, 0x6F, 0x6E, 0x73, 0x6F, 0x6C, 0x65, 0x20, 0x6D, 0x65, 0x73, 0x73, 
	0x61, 0x67, 0x65, 0x00, 0x16, 0xBA, 0xCD, 0x6B, 0x3F, 0x07, 0x05, 0x17, 0x71, 0x00, 0x00, 0x00, 
	0x17, 0x79, 0x00, 0x00, 0x00, 0x17, 0x7F, 0x00, 0x00, 0x00, 0x17, 0x50, 0x00, 0x00, 0x00, 0x06, 
	0x01, 0x25, 0x39, 0x16, 0x45, 0xAF, 0x55, 0x8E, 0x16, 0x65, 0x14, 0x0B, 0x2E, 0x07, 0x16, 0x0B, 
	0x91, 0x52, 0x8A, 0x01, 0x25, 0x39, 0x16, 0x31, 0x21, 0x7B, 0x43, 0x16, 0xAF, 0x98, 0xC6, 0x40, 
	0x07, 0x16, 0x01, 0x95, 0x49, 0x1E, 0x01, 0x16, 0x4E, 0xA7, 0xC4, 0xEB, 0x01, 0x28, 0x01, 0x16, 
	0x98, 0x76, 0x90, 0xA2, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0x01, 0x95, 0x49, 0x1E, 0x16, 
	0xBC, 0xA2, 0x43, 0xD4, 0x01, 0x25, 0x16, 0xEE, 0x93, 0xBC, 0xC5, 0x16, 0xAF, 0x98, 0xC6, 0x40, 
	0x07, 0x03, 0x16, 0x01, 0x95, 0x49, 0x1E, 0x16, 0xD6, 0xAB, 0x4C, 0xDD, 0x07, 0x0E, 0x16, 0xD1, 
	0x2F, 0x89, 0x05, 0x0A, 0x17, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x04, 0x01, 0x16, 0xB6, 0xE9, 0x15, 
	0x3C, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x03, 0x16, 0x01, 0x95, 0x49, 0x1E, 0x16, 0xD6, 0xAB, 
	0x4C, 0xDD, 0x07, 0x17, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x28, 0x01, 0x25, 0x16, 0x8B, 0x48, 
	0x28, 0x30, 0x16, 0xB7, 0xAF, 0x2B, 0x9F, 0x01, 0x16, 0x74, 0x85, 0xA6, 0x34, 0x07, 0x1F, 0x00, 
	0x80, 0x3B, 0x44, 0x00, 0x00, 0x20, 0x41, 0x01, 0x16, 0x53, 0x19, 0x26, 0x7F, 0x07, 0x1F, 0x00, 
	0x00, 0x48, 0x42, 0x00, 0x00, 0x70, 0x43, 0x01, 0x16, 0xDF, 0x01, 0xA8, 0xBF, 0x16, 0xD1, 0x2F, 
	0x89, 0x05, 0x07, 0x17, 0x07, 0x00, 0x00, 0x00, 0x01, 0x16, 0xFE, 0xAC, 0xC0, 0xD0, 0x07, 0x17, 
	0x96, 0x00, 0x00, 0x00, 0x01, 0x26, 0x01, 0x16, 0x74, 0x85, 0xA6, 0x34, 0x07, 0x1F, 0x00, 0x80, 
	0x3B, 0x44, 0x00, 0x00, 0x20, 0x41, 0x01, 0x16, 0x53, 0x19, 0x26, 0x7F, 0x07, 0x1F, 0x00, 0x00, 
	0xA0, 0x41, 0x00, 0x80, 0x84, 0x43, 0x01, 0x16, 0xDF, 0x01, 0xA8, 0xBF, 0x16, 0xD1, 0x2F, 0x89, 
	0x05, 0x07, 0x17, 0x0A, 0x00, 0x00, 0x00, 0x01, 0x16, 0xFE, 0xAC, 0xC0, 0xD0, 0x07, 0x17, 0x96,  // 0x06->0x0A & 0x60 ->0x96
	0x00, 0x00, 0x00, 0x01, 0x28, 0x01, 0x25, 0x16, 0x7B, 0x71, 0x66, 0xCF, 0x16, 0x28, 0x27, 0x9E, 
	0xD7, 0x01, 0x16, 0xBA, 0xCD, 0x6B, 0x3F, 0x07, 0x05, 0x17, 0x00, 0x00, 0x00, 0x00, 0x17, 0x50, 
	0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x17, 0x50, 0x00, 0x00, 0x00, 0x06, 0x01, 0x26, 
	0x01, 0x25, 0x16, 0x7B, 0x71, 0x66, 0xCF, 0x16, 0x97, 0x18, 0x98, 0x85, 0x01, 0x16, 0xBA, 0xCD, 
	0x6B, 0x3F, 0x07, 0x05, 0x17, 0x50, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 
	0x00, 0x00, 0x00, 0x17, 0x50, 0x00, 0x00, 0x00, 0x06, 0x01, 0x28, 0x01, 0x28, 0x01, 0x16, 0xB9, 
	0x6C, 0x35, 0x90, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0x01, 0x95, 0x49, 0x1E, 0x16, 0x53, 
	0x19, 0x26, 0x7F, 0x07, 0x2D, 0x16, 0x53, 0x19, 0x26, 0x7F, 0x01, 0x16, 0x40, 0x51, 0x66, 0x73, 
	0x03, 0x01, 0x16, 0xD6, 0xA8, 0x21, 0x73, 0x07, 0x16, 0x63, 0x22, 0xD9, 0x40, 0x01, 0x16, 0xB0,
	0x9F, 0x71, 0xC2, 0x07, 0x16, 0x01, 0x95, 0x49, 0x1E, 0x01, 0x16, 0x2D, 0xF7, 0x6B, 0x2F, 0x07, 
	0x16, 0x9D, 0x27, 0x9E, 0xBA, 0x01, 0x16, 0x38, 0x58, 0x74, 0xC4, 0x07, 0x2D, 0x16, 0x38, 0x58, 
	0x74, 0xC4, 0x01, 0x16, 0xE4, 0x93, 0xE0, 0x67, 0x07, 0x05, 0x16, 0x97, 0x18, 0x98, 0x85, 0x16, 
	0x35, 0xE0, 0x26, 0xE1, 0x06, 0x01, 0x16, 0xBA, 0xCD, 0x6B, 0x3F, 0x07, 0x2D, 0x16, 0xBA, 0xCD,
	0x6B, 0x3F, 0x01, 0x16, 0x7B, 0xDA, 0xB9, 0x13, 0x07, 0x1A, 0xCD, 0xCC, 0x4C, 0x3F, 0x01, 0x16,
	0x26, 0x44, 0x94, 0x1D, 0x01, 0x16, 0x74, 0x85, 0xA6, 0x34, 0x07, 0x2D, 0x16, 0x74, 0x85, 0xA6, 
	0x34, 0x01, 0x16, 0xA2, 0x39, 0x28, 0x32, 0x01, 0x16, 0x31, 0x0F, 0x71, 0x57, 0x07, 0x17, 0x05,
	0x00, 0x00, 0x00, 0x01, 0x04, 0x01, 0x20, 0x01, 0x16, 0xE6, 0x39, 0xA6, 0xC2, 0x07, 0x17, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x07, 0x16, 0xD1, 0x2F, 0x89, 0x05, 0x01,
	0x20, 0x01, 0x25, 0x16, 0xEE, 0x93, 0xBC, 0xC5, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x03, 0x16,
	0x01, 0x95, 0x49, 0x1E, 0x16, 0xD6, 0xAB, 0x4C, 0xDD, 0x07, 0x0E, 0x16, 0xD1, 0x2F, 0x89, 0x05, 
	0x0A, 0x2D, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x0F, 0x04, 0x01, 0x16, 0x61, 0xD7, 0x6D, 0x40, 0x16,
	0xAF, 0x98, 0xC6, 0x40, 0x07, 0x03, 0x16, 0x01, 0x95, 0x49, 0x1E, 0x16, 0xD6, 0xAB, 0x4C, 0xDD,
	0x07, 0x0E, 0x16, 0xD1, 0x2F, 0x89, 0x05, 0x0A, 0x2D, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x0F, 0x04,
	0x01, 0x2D, 0x16, 0xE6, 0x39, 0xA6, 0xC2, 0x07, 0x0E, 0x2D, 0x16, 0xE6, 0x39, 0xA6, 0xC2, 0x0B,
	0x2D, 0x16, 0xF0, 0x1A, 0xB2, 0x0A, 0x0F, 0x01, 0x2D, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x07, 0x0E,
	0x2D, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x0A, 0x17, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x01, 0x26, 0x01, 
	0x22, 0x01, 0x28, 0x01, 0x21, 0x01, 0x25, 0x0E, 0x2D, 0x16, 0xE6, 0x39, 0xA6, 0xC2, 0x14, 0x2D, 
	0x16, 0xFE, 0xAC, 0xC0, 0xD0, 0x0F, 0x01, 0x16, 0xB6, 0xE9, 0x15, 0x3C, 0x16, 0xAF, 0x98, 0xC6, 
	0x40, 0x07, 0x03, 0x16, 0x01, 0x95, 0x49, 0x1E, 0x16, 0xD6, 0xAB, 0x4C, 0xDD, 0x07, 0x17, 0x00, 
	0x00, 0x00, 0x00, 0x04, 0x01, 0x26, 0x01, 0x22, 0x01, 0x28, 0x01, 0x21, 0x01, 0x25, 0x16, 0x7B,
	0x71, 0x66, 0xCF, 0x16, 0xDD, 0x85, 0xC3, 0x6F, 0x01, 0x16, 0x25, 0xB5, 0x61, 0x0E, 0x16, 0xAF, 
	0x98, 0xC6, 0x40, 0x07, 0x2D, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x16, 0x40, 0xDF, 0xF8, 0xF2, 0x16, 
	0x0C, 0xF1, 0x31, 0x70, 0x07, 0x03, 0x16, 0xBA, 0x67, 0x6B, 0x90, 0x07, 0x2D, 0x16, 0xBA, 0x67, 
	0x6B, 0x90, 0x2C, 0x04, 0x01, 0x29, 0x01, 0x28, 0x01, 0x25, 0x39, 0x16, 0x8B, 0x48, 0x28, 0x30, 
	0x16, 0xB7, 0xAF, 0x2B, 0x9F, 0x01, 0x25, 0x39, 0x16, 0x7B, 0x71, 0x66, 0xCF, 0x16, 0xCF, 0xA3, 
	0x79, 0xD8, 0x01, 0x16, 0x25, 0xB5, 0x61, 0x0E, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x2D, 0x16, 
	0xAF, 0x98, 0xC6, 0x40, 0x16, 0x40, 0xDF, 0xF8, 0xF2, 0x2C, 0x01, 0x28, 0x01, 0x28, 0x01, 0x28, 
	0x01, 0x24, 0x01
};

const uint8_t console_message_wait_and_die_new[] = { //0xF2F8DF40 
	/*
		SCRIPT console_message_wait_and_die time = ( console_wait_time ) 
			DoMorph time = 0.00000000000 alpha = 0 
			DoMorph time = 0.30000001192 alpha = 1 
			wait <time> seconds 
			DoMorph time = 0.40000000596 alpha = 0 
			Die 
		ENDSCRIPT
	*/
	0x16, 0xBA, 0x67, 0x6B, 0x90, 0x07, 0x0E, 0x16, 0xBB, 0xBD, 0x4D, 0x07, 0x0F, 0x01, 0x16, 0xF3, 
	0x8D, 0x0C, 0xDD, 0x16, 0xBA, 0x67, 0x6B, 0x90, 0x07, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x16, 0x95, 
	0xC6, 0x1F, 0x2F, 0x07, 0x17, 0x00, 0x00, 0x00, 0x00, 0x01, 0x16, 0xF3, 0x8D, 0x0C, 0xDD, 0x16, 
	0xBA, 0x67, 0x6B, 0x90, 0x07, 0x1A, 0x9A, 0x99, 0x99, 0x3E, 0x16, 0x95, 0xC6, 0x1F, 0x2F, 0x07,
	0x17, 0x01, 0x00, 0x00, 0x00, 0x01, 0x16, 0x1A, 0x7C, 0x11, 0x82, 0x2D, 0x16, 0xBA, 0x67, 0x6B, 
	0x90, 0x16, 0x19, 0xF6, 0x29, 0xD0, 0x01, 0x16, 0xF3, 0x8D, 0x0C, 0xDD, 0x16, 0xBA, 0x67, 0x6B, 
	0x90, 0x07, 0x1A, 0xCD, 0xCC, 0xCC, 0x3E, 0x16, 0x95, 0xC6, 0x1F, 0x2F, 0x07, 0x17, 0x00, 0x00, 
	0x00, 0x00, 0x01, 0x16, 0x28, 0x00, 0x87, 0xC6, 0x01, 0x24, 0x01
};

const uint8_t gameflow_startrun_new[] = { //0x8c34fe0a 
	0x01, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x07, 0x16, 0xD1, 0x2F, 0x89, 0x05, 0x01, 0x20, 0x01, 0x25,
	0x16, 0xEE, 0x93, 0xBC, 0xC5, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x03, 0x16, 0x01, 0x95, 0x49,
	0x1E, 0x16, 0xD6, 0xAB, 0x4C, 0xDD, 0x07, 0x0E, 0x16, 0xD1, 0x2F, 0x89, 0x05, 0x0A, 0x2D, 0x16,
	0xFE, 0x98, 0x8C, 0x7F, 0x0F, 0x04, 0x01, 0x16, 0x25, 0xB5, 0x61, 0x0E, 0x16, 0xAF, 0x98, 0xC6,
	0x40, 0x07, 0x03, 0x16, 0x01, 0x95, 0x49, 0x1E, 0x16, 0xD6, 0xAB, 0x4C, 0xDD, 0x07, 0x0E, 0x16,
	0xD1, 0x2F, 0x89, 0x05, 0x0A, 0x2D, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x0F, 0x04, 0x16, 0x40, 0xDF,
	0xF8, 0xF2, 0x01, 0x26, 0x01, 0x28, 0x01, 0x2D, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x07, 0x0E, 0x2D,
	0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x0A, 0x17, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x01, 0x21, 0x16, 0xD1,
	0x2F, 0x89, 0x05, 0x01, 0x25, 0x39, 0x16, 0x8B, 0x48, 0x28, 0x30, 0x16, 0xB7, 0xAF, 0x2B, 0x9F,
	0x01, 0x25, 0x16, 0x22, 0x59, 0x98, 0x20, 0x16, 0x6C, 0xCA, 0xE8, 0x7D, 0x01, 0x16, 0x32, 0x91,
	0xB0, 0xCF, 0x16, 0xF9, 0x81, 0xDC, 0xA1, 0x07, 0x16, 0xE7, 0x3E, 0x28, 0xF9, 0x16, 0x2C, 0xC1,
	0x22, 0xE0, 0x01, 0x16, 0x3E, 0x79, 0x2D, 0x9C, 0x16, 0xF9, 0x81, 0xDC, 0xA1, 0x07, 0x16, 0xE7,
	0x3E, 0x28, 0xF9, 0x16, 0x0C, 0xF1, 0x31, 0x70, 0x07, 0x03, 0x16, 0xBA, 0x67, 0x6B, 0x90, 0x07,
	0x17, 0x78, 0x00, 0x00, 0x00, 0x16, 0x70, 0xF1, 0x94, 0x34, 0x07, 0x16, 0x85, 0x20, 0x97, 0xD5,
	0x04, 0x01, 0x28, 0x01, 0x28, 0x01, 0x25, 0x16, 0x60, 0x7E, 0xB8, 0x9C, 0x01, 0x16, 0x79, 0x4A,
	0xEF, 0xB6, 0x16, 0x77, 0xB8, 0x8A, 0x5B, 0x07, 0x17, 0x00, 0x00, 0x00, 0x00, 0x01, 0x2D, 0x16,
	0xAF, 0xEC, 0x30, 0x08, 0x42, 0x16, 0xC2, 0xE5, 0xA4, 0x23, 0x16, 0x71, 0xDE, 0xF9, 0xDE, 0x01,
	0x16, 0x79, 0x4A, 0xEF, 0xB6, 0x16, 0x77, 0xB8, 0x8A, 0x5B, 0x07, 0x17, 0x01, 0x00, 0x00, 0x00,
	0x01, 0x2D, 0x16, 0xAF, 0xEC, 0x30, 0x08, 0x42, 0x16, 0xC2, 0xE5, 0xA4, 0x23, 0x16, 0x71, 0xDE,
	0xF9, 0xDE, 0x01, 0x26, 0x01, 0x25, 0x39, 0x16, 0x4B, 0x6B, 0xDA, 0x94, 0x01, 0x16, 0x77, 0xB8,
	0x8A, 0x5B, 0x42, 0x16, 0xC2, 0xE5, 0xA4, 0x23, 0x16, 0x71, 0xDE, 0xF9, 0xDE, 0x01, 0x28, 0x01,
	0x28, 0x01, 0x25, 0x39, 0x16, 0x40, 0x09, 0x0C, 0x03, 0x16, 0xFC, 0xB3, 0x56, 0x26, 0x01, 0x25,
	0x39, 0x16, 0xE9, 0x6F, 0xDA, 0xA1, 0x01, 0x16, 0x9E, 0xA8, 0x92, 0xE5, 0x16, 0xAA, 0x7A, 0x19,
	0xD2, 0x01, 0x28, 0x01, 0x28, 0x01, 0x16, 0x9E, 0xA8, 0x92, 0xE5, 0x16, 0x15, 0xDA, 0x41, 0xBA,
	0x01, 0x16, 0x9E, 0xA8, 0x92, 0xE5, 0x16, 0xF6, 0xDD, 0xCE, 0x34, 0x01, 0x16, 0x9E, 0xA8, 0x92,
	0xE5, 0x16, 0x68, 0xDD, 0x64, 0xF8, 0x01, 0x16, 0x9E, 0xA8, 0x92, 0xE5, 0x16, 0x71, 0xD4, 0xA1,
	0xF2, 0x01, 0x16, 0x9E, 0xA8, 0x92, 0xE5, 0x16, 0xEF, 0xD4, 0x0B, 0x3E, 0x01, 0x16, 0x9E, 0xA8,
	0x92, 0xE5, 0x16, 0x0C, 0xD3, 0x84, 0xB0, 0x01, 0x16, 0x9E, 0xA8, 0x92, 0xE5, 0x16, 0x92, 0xD3,
	0x2E, 0x7C, 0x01, 0x25, 0x39, 0x16, 0x8B, 0x48, 0x28, 0x30, 0x16, 0xF1, 0xB4, 0x68, 0xA3, 0x01,
	0x16, 0x1C, 0x28, 0x07, 0xE5, 0x16, 0x77, 0xB8, 0x8A, 0x5B, 0x07, 0x17, 0x00, 0x00, 0x00, 0x00,
	0x16, 0x49, 0xE9, 0xA9, 0x46, 0x01, 0x28, 0x01, 0x16, 0x68, 0x17, 0xD8, 0x45, 0x01, 0x16, 0xBB,
	0x17, 0xED, 0x2B, 0x01, 0x25, 0x16, 0x31, 0x31, 0x87, 0x7D, 0x01, 0x16, 0xE2, 0x98, 0xD1, 0x50,
	0x16, 0x65, 0x14, 0x0B, 0x2E, 0x07, 0x16, 0x45, 0x4E, 0x95, 0xF5, 0x01, 0x28, 0x01, 0x16, 0x0E,
	0xC6, 0xE8, 0x2D, 0x1B, 0x35, 0x00, 0x00, 0x00, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6E, 0x67,
	0x20, 0x61, 0x20, 0x72, 0x75, 0x6E, 0x2E, 0x2E, 0x2E, 0x2E, 0x73, 0x6B, 0x69, 0x70, 0x20, 0x74,
	0x72, 0x61, 0x63, 0x6B, 0x73, 0x20, 0x61, 0x6E, 0x64, 0x20, 0x63, 0x72, 0x61, 0x6E, 0x6B, 0x20,
	0x75, 0x70, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6D, 0x75, 0x73, 0x69, 0x63, 0x00, 0x01, 0x25, 0x16,
	0x22, 0x59, 0x98, 0x20, 0x16, 0x97, 0x33, 0x99, 0xD1, 0x01, 0x26, 0x01, 0x16, 0x61, 0x95, 0xD4,
	0x26, 0x01, 0x28, 0x01, 0x25, 0x16, 0x31, 0x31, 0x87, 0x7D, 0x01, 0x25, 0x16, 0x40, 0x09, 0x0C,
	0x03, 0x16, 0x6F, 0xCC, 0xDB, 0xE4, 0x01, 0x16, 0x0A, 0x99, 0x5D, 0xCB, 0x17, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x26, 0x01, 0x16, 0x0A, 0x99, 0x5D, 0xCB, 0x17, 0x01, 0x00, 0x00, 0x00, 0x01, 0x28,
	0x01, 0x26, 0x01, 0x16, 0x0A, 0x99, 0x5D, 0xCB, 0x17, 0x00, 0x00, 0x00, 0x00, 0x01, 0x28, 0x01,
	0x25, 0x16, 0x22, 0x59, 0x98, 0x20, 0x16, 0x80, 0xA2, 0x38, 0x8D, 0x01, 0x16, 0x94, 0xF9, 0xF8,
	0x1F, 0x16, 0x65, 0x14, 0x0B, 0x2E, 0x07, 0x16, 0x9B, 0x28, 0xD9, 0x8F, 0x01, 0x16, 0xAE, 0xF5,
	0x86, 0xEB, 0x01, 0x26, 0x01, 0x28, 0x01, 0x25, 0x16, 0x22, 0x59, 0x98, 0x20, 0x16, 0x97, 0x33,
	0x99, 0xD1, 0x01, 0x16, 0x1F, 0x9C, 0x26, 0x25, 0x01, 0x28, 0x01, 0x25, 0x16, 0xE9, 0x6F, 0xDA,
	0xA1, 0x01, 0x25, 0x16, 0x6C, 0xD1, 0x30, 0xA3, 0x01, 0x26, 0x01, 0x16, 0x85, 0x20, 0x7A, 0x2B,
	0x01, 0x25, 0x16, 0x4B, 0x6B, 0xDA, 0x94, 0x01, 0x16, 0x1B, 0x16, 0x25, 0x4D, 0x01, 0x25, 0x16,
	0x22, 0x59, 0x98, 0x20, 0x16, 0xF5, 0xCA, 0xDE, 0xF3, 0x01, 0x16, 0x6A, 0x97, 0x63, 0xDB, 0x01,
	0x28, 0x01, 0x28, 0x01, 0x28, 0x01, 0x28, 0x01, 0x25, 0x16, 0x8B, 0x48, 0x28, 0x30, 0x16, 0xF1,
	0xB4, 0x68, 0xA3, 0x01, 0x25, 0x0E, 0x16, 0x8F, 0xB3, 0xBF, 0x7F, 0x07, 0x17, 0x01, 0x00, 0x00,
	0x00, 0x0F, 0x01, 0x16, 0x60, 0x58, 0x9A, 0x23, 0x16, 0x22, 0x8E, 0xE7, 0xC4, 0x01, 0x16, 0xDF,
	0x71, 0x9A, 0x58, 0x01, 0x16, 0xDF, 0x01, 0xA8, 0xBF, 0x16, 0x2C, 0x66, 0xA5, 0x77, 0x07, 0x17,
	0x00, 0x00, 0x00, 0x00, 0x01, 0x16, 0xE8, 0xBB, 0x19, 0xE5, 0x01, 0x29, 0x01, 0x28, 0x01, 0x28,
	0x01, 0x25, 0x39, 0x0E, 0x16, 0x8E, 0x19, 0xC7, 0x4D, 0x07, 0x16, 0x2C, 0x90, 0x7E, 0x0F, 0x0F,
	0x01, 0x25, 0x0E, 0x16, 0x8E, 0x19, 0xC7, 0x4D, 0x07, 0x16, 0x02, 0xDA, 0x7B, 0xBB, 0x0F, 0x01,
	0x16, 0x6F, 0x39, 0x2E, 0xD0, 0x16, 0x9A, 0x3B, 0xD4, 0xC3, 0x01, 0x16, 0xDF, 0x01, 0xA8, 0xBF,
	0x16, 0x1B, 0xD4, 0xE4, 0xA8, 0x07, 0x17, 0x01, 0x00, 0x00, 0x00, 0x01, 0x16, 0xDF, 0x01, 0xA8,
	0xBF, 0x16, 0x86, 0x36, 0x5F, 0x11, 0x07, 0x17, 0x01, 0x00, 0x00, 0x00, 0x01, 0x28, 0x01, 0x16,
	0x36, 0xE3, 0xB6, 0x9E, 0x16, 0x8E, 0x19, 0xC7, 0x4D, 0x01, 0x16, 0xDF, 0x01, 0xA8, 0xBF, 0x16,
	0x8E, 0x19, 0xC7, 0x4D, 0x07, 0x16, 0x2C, 0x90, 0x7E, 0x0F, 0x01, 0x28, 0x01, 0x2D, 0x16, 0x6D,
	0x29, 0x3A, 0xCD, 0x07, 0x17, 0x01, 0x00, 0x00, 0x00, 0x01, 0x25, 0x16, 0x8B, 0x48, 0x28, 0x30,
	0x16, 0xD4, 0x22, 0xC8, 0xF6, 0x01, 0x25, 0x0E, 0x16, 0x8F, 0xB3, 0xBF, 0x7F, 0x07, 0x17, 0x01,
	0x00, 0x00, 0x00, 0x0F, 0x01, 0x2D, 0x16, 0x6D, 0x29, 0x3A, 0xCD, 0x07, 0x17, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x16, 0xDF, 0x01, 0xA8, 0xBF, 0x16, 0x8F, 0xB3, 0xBF, 0x7F, 0x07, 0x17, 0x00, 0x00,
	0x00, 0x00, 0x01, 0x16, 0x60, 0x58, 0x9A, 0x23, 0x16, 0x22, 0x8E, 0xE7, 0xC4, 0x01, 0x16, 0xDF,
	0x71, 0x9A, 0x58, 0x01, 0x16, 0x09, 0x63, 0xEB, 0xFA, 0x16, 0x65, 0x14, 0x0B, 0x2E, 0x07, 0x16,
	0x4B, 0xBC, 0x8A, 0x7E, 0x01, 0x16, 0x9F, 0xA9, 0x57, 0xF7, 0x16, 0xF9, 0x81, 0xDC, 0xA1, 0x07,
	0x1B, 0x15, 0x00, 0x00, 0x00, 0x63, 0x75, 0x74, 0x73, 0x63, 0x65, 0x6E, 0x65, 0x73, 0x5C, 0x4E,
	0x4A, 0x5F, 0x30, 0x31, 0x56, 0x2E, 0x63, 0x75, 0x74, 0x00, 0x16, 0x41, 0x50, 0x00, 0x1A, 0x07,
	0x16, 0x82, 0xDF, 0xB6, 0xC9, 0x16, 0x1C, 0x9F, 0xFA, 0xBA, 0x01, 0x29, 0x01, 0x28, 0x01, 0x28,
	0x01, 0x25, 0x0E, 0x2D, 0x16, 0x6D, 0x29, 0x3A, 0xCD, 0x07, 0x17, 0x01, 0x00, 0x00, 0x00, 0x0F,
	0x01, 0x16, 0x36, 0xE3, 0xB6, 0x9E, 0x16, 0xB1, 0x79, 0x97, 0x01, 0x01, 0x28, 0x01, 0x25, 0x16,
	0x22, 0x59, 0x98, 0x20, 0x16, 0xA4, 0x1E, 0xED, 0x1D, 0x01, 0x25, 0x39, 0x16, 0x8B, 0x48, 0x28,
	0x30, 0x16, 0xB7, 0xAF, 0x2B, 0x9F, 0x01, 0x25, 0x39, 0x16, 0x8B, 0x48, 0x28, 0x30, 0x16, 0xF1,
	0xB4, 0x68, 0xA3, 0x01, 0x25, 0x39, 0x16, 0x8B, 0x48, 0x28, 0x30, 0x16, 0xD2, 0x3D, 0xE3, 0x4B,
	0x01, 0x16, 0x77, 0xB8, 0x8A, 0x5B, 0x42, 0x16, 0x3C, 0x07, 0x59, 0xEE, 0x01, 0x25, 0x0E, 0x16,
	0x5F, 0xBB, 0xB3, 0x33, 0x07, 0x17, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x01, 0x16, 0x3E, 0x77, 0xC4,
	0x97, 0x01, 0x16, 0x36, 0xE3, 0xB6, 0x9E, 0x16, 0xEC, 0xD4, 0x14, 0x6C, 0x01, 0x29, 0x01, 0x26,
	0x01, 0x25, 0x39, 0x0E, 0x0E, 0x16, 0xA7, 0x07, 0xCD, 0x24, 0x05, 0x17, 0x00, 0x00, 0x00, 0x00,
	0x06, 0x0F, 0x07, 0x16, 0xB0, 0x03, 0x34, 0xDA, 0x0F, 0x01, 0x16, 0x37, 0xD4, 0x63, 0x29, 0x16,
	0x01, 0xE5, 0x82, 0x99, 0x07, 0x0E, 0x16, 0xA7, 0x07, 0xCD, 0x24, 0x05, 0x17, 0x00, 0x00, 0x00,
	0x00, 0x06, 0x0F, 0x16, 0x6C, 0x7A, 0xC9, 0xF1, 0x01, 0x16, 0x21, 0x67, 0xB8, 0xD6, 0x07, 0x16,
	0xA7, 0x07, 0xCD, 0x24, 0x01, 0x16, 0x70, 0xBB, 0x10, 0x8E, 0x16, 0x02, 0xD6, 0x61, 0x8F, 0x07,
	0x16, 0x21, 0x67, 0xB8, 0xD6, 0x16, 0xFE, 0x98, 0x8C, 0x7F, 0x07, 0x17, 0x00, 0x00, 0x00, 0x00,
	0x16, 0x0D, 0x63, 0x40, 0x4B, 0x07, 0x16, 0xB0, 0x03, 0x34, 0xDA, 0x01, 0x29, 0x01, 0x28, 0x01,
	0x28, 0x01, 0x28, 0x01, 0x28, 0x01, 0x28, 0x01, 0x28, 0x01, 0x25, 0x39, 0x16, 0x8B, 0x48, 0x28,
	0x30, 0x16, 0xB7, 0xAF, 0x2B, 0x9F, 0x01, 0x25, 0x39, 0x0E, 0x16, 0x86, 0x36, 0x5F, 0x11, 0x07,
	0x17, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x01, 0x16, 0x7A, 0xBF, 0x2B, 0x9D, 0x01, 0x28, 0x01, 0x28,
	0x01, 0x25, 0x39, 0x16, 0x8B, 0x48, 0x28, 0x30, 0x16, 0xB7, 0xAF, 0x2B, 0x9F, 0x01, 0x25, 0x39,
	0x16, 0x8B, 0x48, 0x28, 0x30, 0x16, 0xF1, 0xB4, 0x68, 0xA3, 0x01, 0x25, 0x39, 0x16, 0x8B, 0x48,
	0x28, 0x30, 0x16, 0xD2, 0x3D, 0xE3, 0x4B, 0x01, 0x25, 0x0E, 0x16, 0x44, 0x13, 0x8D, 0x18, 0x07,
	0x17, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x01, 0x25, 0x16, 0x8B, 0x48, 0x28, 0x30, 0x16, 0xD4, 0x22,
	0xC8, 0xF6, 0x01, 0x16, 0x77, 0xB8, 0x8A, 0x5B, 0x42, 0x16, 0x8B, 0xDD, 0x19, 0x88, 0x16, 0xF9,
	0x81, 0xDC, 0xA1, 0x07, 0x16, 0xD9, 0x38, 0x21, 0x12, 0x16, 0x32, 0x12, 0xA9, 0x90, 0x16, 0xE6,
	0xE2, 0x07, 0xD6, 0x01, 0x28, 0x01, 0x16, 0xEF, 0x1E, 0x4F, 0x95, 0x01, 0x16, 0xDF, 0x01, 0xA8,
	0xBF, 0x16, 0x82, 0xC9, 0x82, 0xBF, 0x07, 0x17, 0x01, 0x00, 0x00, 0x00, 0x01, 0x25, 0x16, 0x8E,
	0xCD, 0x36, 0xCF, 0x01, 0x16, 0xDF, 0x01, 0xA8, 0xBF, 0x16, 0x72, 0x25, 0xCA, 0xE2, 0x07, 0x17,
	0x01, 0x00, 0x00, 0x00, 0x01, 0x26, 0x01, 0x16, 0xDF, 0x01, 0xA8, 0xBF, 0x16, 0x72, 0x25, 0xCA,
	0xE2, 0x07, 0x17, 0x00, 0x00, 0x00, 0x00, 0x01, 0x28, 0x01, 0x16, 0x77, 0x77, 0x9B, 0x1D, 0x17,
	0x01, 0x00, 0x00, 0x00, 0x01, 0x16, 0xE1, 0xB3, 0xD2, 0xDF, 0x16, 0x37, 0xD6, 0x49, 0xF6, 0x01,
	0x16, 0x8B, 0xF7, 0x62, 0x86, 0x16, 0x06, 0x40, 0xA5, 0xEF, 0x01, 0x16, 0xDF, 0x01, 0xA8, 0xBF,
	0x16, 0x44, 0x13, 0x8D, 0x18, 0x07, 0x17, 0x00, 0x00, 0x00, 0x00, 0x01, 0x16, 0xDF, 0x01, 0xA8,
	0xBF, 0x16, 0x2C, 0x66, 0xA5, 0x77, 0x07, 0x17, 0x01, 0x00, 0x00, 0x00, 0x01, 0x29, 0x01, 0x28,
	0x01, 0x28, 0x01, 0x28, 0x01, 0x28, 0x01, 0x25, 0x16, 0x8B, 0x48, 0x28, 0x30, 0x16, 0x5D, 0x03,
	0x64, 0xB6, 0x01, 0x16, 0x46, 0xD9, 0x4A, 0xF7, 0x01, 0x26, 0x01, 0x25, 0x16, 0xCA, 0x3C, 0x0B,
	0x85, 0x01, 0x16, 0xDC, 0xF6, 0xB5, 0xD4, 0x01, 0x28, 0x01, 0x28, 0x01, 0x24, 0x01
};


const uint8_t select_network_play_multi_new[] = { //0x40BB7409 
	/*
		SCRIPT select_network_play_multi
			dialog_box_exit 
			pulse_blur speed = 2 start = 255 
			IF GotParam change_gamemode 
				<change_gamemode> 
			ENDIF 
			make_new_menu { 
				pos = PAIR(120.00000000000, 100.00000000000) 
				internal_just = [ center center ] 
				menu_id = multiplayer_options_menu 
				vmenu_id = multiplayer_options_vmenu 
				menu_title = "" 
				helper_text = generic_helper_text 
			} 
			build_theme_sub_title change_gamemode = "MULTIPLAYER" 
			build_top_and_bottom_blocks 
			make_mainmenu_3d_plane Model = "mainmenu_bg\\mainmenu_bg.mdl" scale = PAIR(1.25000000000, 1.25000000000) pos = PAIR(360.00000000000, 217.00000000000) 
			CreateScreenElement { 
				Type = SpriteElement 
				parent = current_menu_anchor 
				id = mm_building 
				texture = mm_building 
				just = [ Left top ] 
				pos = PAIR(0.00000000000, 62.00000000000) 
				scale = PAIR(1.20000004768, 1.25000000000) 
				z_priority = -3 
				alpha = 1 
			} 
			make_mainmenu_clouds 
			kill_start_key_binding 
			SetScreenElementProps { id = multiplayer_options_vmenu event_handlerscreate_main_menu = [ 
					{ pad_back generic_menu_pad_back params = { callback = create_main_menu } } 
				] 
			} 
			FormatText ChecksumName = bracket_texture "i_sub_frame" i = ( THEME_PREFIXES [ current_theme_prefix ] ) 
			make_main_menu_item { text = #"THUG Online Play" 
				id = menu_net 
				pad_choose_script = career_options_menu_exit 
				pad_choose_params = { new_menu_script = select_network_play 
					change_gamemode = change_gamemode_net 
					hold_camera 
				} 
				mark_first_input 
				focus_params = { attract_timer } 
			} 
			SetScreenElementProps { 
				id = menu_net 
				event_handlers = [ 
					{ focus PlayHelperDesc params = { online_helper_desc } } 
					{ unfocus StopHelperDesc } 
				] 
			} 
			make_main_menu_item { text = #"Network Play" 
				id = mm_multi_play 
				pad_choose_script = career_options_menu_exit 
				pad_choose_params = { new_menu_script = select_xbox_multiplayer 
					change_gamemode = change_gamemode_net 
					hold_camera 
				} 
				mark_first_input 
				focus_params = { attract_timer } 
			} 
			SetScreenElementProps { 
				id = mm_multi_play 
				event_handlers = [ 
					{ focus PlayHelperDesc params = { systemlink_helper_desc } } 
					{ unfocus StopHelperDesc } 
				] 
			} 
			GetStackedScreenElementPos y id = <id> offset = PAIR(180.00000000000, 20.00000000000) 
			FireEvent Type = focus target = current_menu_anchor 
			IF GotParam from_skater_select 
				spawnscript shadow_skater_script2 params = { make_it_safe } 
			ENDIF 
		ENDSCRIPT
	*/
	0x01, 0x16, 0x9D, 0x6A, 0x6B, 0x66, 0x01, 0x16, 0x55, 0xBD, 0x17, 0xD4, 0x16, 0x09, 0x01, 0xD9,
	0xF0, 0x07, 0x17, 0x02, 0x00, 0x00, 0x00, 0x16, 0x70, 0xAA, 0x86, 0x60, 0x07, 0x17, 0xFF, 0x00,
	0x00, 0x00, 0x01, 0x25, 0x16, 0x7B, 0x71, 0x66, 0xCF, 0x16, 0x85, 0xAE, 0xFE, 0x91, 0x01, 0x2D,
	0x16, 0x85, 0xAE, 0xFE, 0x91, 0x01, 0x28, 0x01, 0x16, 0xF2, 0x22, 0xB9, 0x0F, 0x03, 0x01, 0x16,
	0x53, 0x19, 0x26, 0x7F, 0x07, 0x1F, 0x00, 0x00, 0xF0, 0x42, 0x00, 0x00, 0xC8, 0x42, 0x01, 0x16,
	0xE4, 0x93, 0xE0, 0x67, 0x07, 0x05, 0x16, 0xDB, 0x14, 0x0F, 0xBF, 0x16, 0xDB, 0x14, 0x0F, 0xBF,
	0x06, 0x01, 0x16, 0xED, 0x16, 0x28, 0x33, 0x07, 0x16, 0x06, 0xE2, 0x47, 0x5A, 0x01, 0x16, 0xED,
	0x8E, 0x59, 0xA1, 0x07, 0x16, 0x63, 0xCD, 0xB1, 0xBE, 0x01, 0x16, 0xF3, 0xA4, 0x65, 0x45, 0x07,
	0x1B, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x16, 0x33, 0xFA, 0x4E, 0x60, 0x07, 0x16, 0xC0, 0xAD,
	0x1C, 0xF3, 0x01, 0x04, 0x01, 0x16, 0x9B, 0x74, 0x9F, 0x0B, 0x16, 0x94, 0x87, 0xC9, 0xD4, 0x07, 
	0x1B, 0x0C, 0x00, 0x00, 0x00, 0x4D, 0x55, 0x4C, 0x54, 0x49, 0x50, 0x4C, 0x41, 0x59, 0x45, 0x52, 
	0x00, 0x01, 0x16, 0x16, 0xCE, 0x0A, 0x93, 0x01, 0x16, 0x1A, 0xD1, 0x92, 0x7C, 0x16, 0x26, 0x8D, 
	0x6A, 0x28, 0x07, 0x1B, 0x1C, 0x00, 0x00, 0x00, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 
	0x5F, 0x62, 0x67, 0x5C, 0x6D, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x75, 0x5F, 0x62, 0x67, 0x2E, 
	0x6D, 0x64, 0x6C, 0x00, 0x16, 0x7B, 0xDA, 0xB9, 0x13, 0x07, 0x1F, 0x00, 0x00, 0xA0, 0x3F, 0x00, 
	0x00, 0xA0, 0x3F, 0x16, 0x53, 0x19, 0x26, 0x7F, 0x07, 0x1F, 0x00, 0x00, 0xB4, 0x43, 0x00, 0x00, 
	0x59, 0x43, 0x01, 0x16, 0x40, 0x51, 0x66, 0x73, 0x03, 0x01, 0x16, 0xD6, 0xA8, 0x21, 0x73, 0x07, 
	0x16, 0x0A, 0x51, 0x2B, 0xB1, 0x01, 0x16, 0xB0, 0x9F, 0x71, 0xC2, 0x07, 0x16, 0x83, 0x1D, 0x3D, 
	0xF5, 0x01, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0xF6, 0x2A, 0x87, 0x02, 0x01, 0x16, 0x8D, 
	0xF2, 0x99, 0x7D, 0x07, 0x16, 0xF6, 0x2A, 0x87, 0x02, 0x01, 0x16, 0x2F, 0x02, 0x60, 0x8B, 0x07, 
	0x05, 0x16, 0x97, 0x18, 0x98, 0x85, 0x16, 0x35, 0xE0, 0x26, 0xE1, 0x06, 0x01, 0x16, 0x53, 0x19, 
	0x26, 0x7F, 0x07, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x42, 0x01, 0x16, 0x7B, 0xDA, 
	0xB9, 0x13, 0x07, 0x1F, 0x9A, 0x99, 0x99, 0x3F, 0x00, 0x00, 0xA0, 0x3F, 0x01, 0x16, 0x31, 0x0F, 
	0x71, 0x57, 0x07, 0x17, 0xFD, 0xFF, 0xFF, 0xFF, 0x01, 0x16, 0x95, 0xC6, 0x1F, 0x2F, 0x07, 0x17, 
	0x01, 0x00, 0x00, 0x00, 0x01, 0x04, 0x01, 0x16, 0xB0, 0x7D, 0x50, 0xCB, 0x01, 0x16, 0x35, 0xAB, 
	0x03, 0xFB, 0x01, 0x16, 0xB9, 0x6C, 0x35, 0x90, 0x03, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 
	0x63, 0xCD, 0xB1, 0xBE, 0x16, 0x3C, 0xF0, 0x5B, 0x47, 0x07, 0x05, 0x01, 0x03, 0x16, 0x2A, 0xFD, 
	0xE0, 0x7E, 0x16, 0xC7, 0x5D, 0x2F, 0x98, 0x16, 0x0C, 0xF1, 0x31, 0x70, 0x07, 0x03, 0x16, 0xD9, 
	0x8B, 0x06, 0x86, 0x07, 0x16, 0x16, 0x45, 0x63, 0x43, 0x04, 0x04, 0x01, 0x06, 0x01, 0x04, 0x01, 
	0x16, 0x28, 0xF4, 0x77, 0x92, 0x16, 0x8F, 0x7A, 0xFA, 0x76, 0x07, 0x16, 0x56, 0xBD, 0x44, 0x3F, 
	0x1B, 0x0D, 0x00, 0x00, 0x00, 0x25, 0x69, 0x5F, 0x73, 0x75, 0x62, 0x5F, 0x66, 0x72, 0x61, 0x6D, 
	0x65, 0x00, 0x16, 0x8E, 0xC9, 0x93, 0x19, 0x07, 0x0E, 0x16, 0x72, 0x40, 0x45, 0x6C, 0x05, 0x16, 
	0xD6, 0xF3, 0xC7, 0x43, 0x06, 0x0F, 0x01, 0x16, 0x3D, 0x7D, 0xF6, 0x08, 0x03, 0x16, 0x38, 0x58, 
	0x74, 0xC4, 0x07, 0x1C, 0x11, 0x00, 0x00, 0x00, 0x54, 0x48, 0x55, 0x47, 0x20, 0x4F, 0x6E, 0x6C, 
	0x69, 0x6E, 0x65, 0x20, 0x50, 0x6C, 0x61, 0x79, 0x00, 0x01, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 
	0x16, 0x32, 0x24, 0xB4, 0x95, 0x01, 0x16, 0xA1, 0xFC, 0x0C, 0x2B, 0x07, 0x16, 0x98, 0x94, 0x75, 
	0xB8, 0x01, 0x16, 0x68, 0x75, 0x43, 0xB8, 0x07, 0x03, 0x16, 0x65, 0x91, 0x36, 0xA2, 0x07, 0x16, 
	0x54, 0xFD, 0xC0, 0x88, 0x01, 0x16, 0x85, 0xAE, 0xFE, 0x91, 0x07, 0x16, 0x9B, 0x8A, 0x93, 0x9A, 
	0x01, 0x16, 0x9A, 0x6C, 0x36, 0xEF, 0x01, 0x04, 0x01, 0x16, 0x26, 0xB7, 0xB2, 0xE6, 0x01, 0x16, 
	0x12, 0x0B, 0xC3, 0xC9, 0x07, 0x03, 0x16, 0x5B, 0x21, 0x94, 0xE4, 0x04, 0x01, 0x04, 0x01, 0x16, 
	0xB9, 0x6C, 0x35, 0x90, 0x03, 0x01, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0x32, 0x24, 0xB4, 
	0x95, 0x01, 0x16, 0x3C, 0xF0, 0x5B, 0x47, 0x07, 0x05, 0x01, 0x03, 0x16, 0x16, 0xB5, 0x3F, 0x9D, 
	0x16, 0x77, 0xA1, 0xC8, 0x28, 0x16, 0x0C, 0xF1, 0x31, 0x70, 0x07, 0x03, 0x16, 0xFB, 0x36, 0xC3, 
	0xCF, 0x04, 0x04, 0x01, 0x03, 0x16, 0xD3, 0x0C, 0xDF, 0x4A, 0x16, 0x80, 0x1C, 0xD1, 0x28, 0x04, 
	0x01, 0x06, 0x01, 0x04, 0x01, 0x16, 0x3D, 0x7D, 0xF6, 0x08, 0x03, 0x16, 0x38, 0x58, 0x74, 0xC4, 
	0x07, 0x1C, 0x0D, 0x00, 0x00, 0x00, 0x4E, 0x65, 0x74, 0x77, 0x6F, 0x72, 0x6B, 0x20, 0x50, 0x6C, 
	0x61, 0x79, 0x00, 0x01, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0xE1, 0x08, 0xD4, 0x0F, 0x01, 
	0x16, 0xA1, 0xFC, 0x0C, 0x2B, 0x07, 0x16, 0x98, 0x94, 0x75, 0xB8, 0x01, 0x16, 0x68, 0x75, 0x43, 
	0xB8, 0x07, 0x03, 0x16, 0x65, 0x91, 0x36, 0xA2, 0x07, 0x16, 0x61, 0xC1, 0x98, 0x3E, 0x01, 0x16, 
	0x85, 0xAE, 0xFE, 0x91, 0x07, 0x16, 0x9B, 0x8A, 0x93, 0x9A, 0x01, 0x16, 0x9A, 0x6C, 0x36, 0xEF, 
	0x01, 0x04, 0x01, 0x16, 0x26, 0xB7, 0xB2, 0xE6, 0x01, 0x16, 0x12, 0x0B, 0xC3, 0xC9, 0x07, 0x03, 
	0x16, 0x5B, 0x21, 0x94, 0xE4, 0x04, 0x01, 0x04, 0x01, 0x16, 0xB9, 0x6C, 0x35, 0x90, 0x03, 0x01, 
	0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0xE1, 0x08, 0xD4, 0x0F, 0x01, 0x16, 0x3C, 0xF0, 0x5B, 
	0x47, 0x07, 0x05, 0x01, 0x03, 0x16, 0x16, 0xB5, 0x3F, 0x9D, 0x16, 0x77, 0xA1, 0xC8, 0x28, 0x16, 
	0x0C, 0xF1, 0x31, 0x70, 0x07, 0x03, 0x16, 0xE3, 0xC6, 0x7E, 0x0A, 0x04, 0x04, 0x01, 0x03, 0x16, 
	0xD3, 0x0C, 0xDF, 0x4A, 0x16, 0x80, 0x1C, 0xD1, 0x28, 0x04, 0x01, 0x06, 0x01, 0x04, 0x01, 0x16, 
	0xA2, 0xBA, 0x25, 0x34, 0x16, 0xEA, 0xD9, 0x24, 0x04, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x2D, 
	0x16, 0xAF, 0x98, 0xC6, 0x40, 0x16, 0x2F, 0x35, 0xF5, 0xA6, 0x07, 0x1F, 0x00, 0x00, 0x34, 0x43, 
	0x00, 0x00, 0xA0, 0x41, 0x01, 0x16, 0xBE, 0x0A, 0x69, 0x27, 0x16, 0xD6, 0xA8, 0x21, 0x73, 0x07, 
	0x16, 0x16, 0xB5, 0x3F, 0x9D, 0x16, 0x03, 0xD0, 0x90, 0xB9, 0x07, 0x16, 0x83, 0x1D, 0x3D, 0xF5, 
	0x01, 0x25, 0x16, 0x7B, 0x71, 0x66, 0xCF, 0x16, 0x87, 0x8C, 0xF5, 0x5E, 0x01, 0x16, 0x36, 0xE3, 
	0xB6, 0x9E, 0x16, 0xE9, 0xE7, 0x1F, 0xE4, 0x16, 0x0C, 0xF1, 0x31, 0x70, 0x07, 0x03, 0x16, 0xE0, 
	0x2E, 0x46, 0x1A, 0x04, 0x01, 0x28, 0x01, 0x24, 0x01
};

const uint8_t change_level_new[] = { //0x39C58EA1 
	/*
		SCRIPT change_level 
			change is_changing_levels = 1 
			IF LevelIs load_sk5ed 
				SwitchOffRailEditor 
			ENDIF 
			ResetScore 
			SetMusicLooping 0 
			IF NOT IsObserving 
				Skater : reset_model_lights 
			ENDIF 
			IF ObjectExists id = Skater2 
				Skater2 : reset_model_lights 
			ENDIF 
			change check_for_unplugged_controllers = 0 
			IF GotParam next_level_script 
				change next_level_script = <next_level_script> 
			ENDIF 
			IF NOT IsObserving 
				Skater : ClearPanel_Landed 
			ENDIF 
			IF NOT GotParam no_levelUnload 
				printf "performing LevelUnload" 
				GoalManager_LevelUnload 
			ENDIF 
			ResetScore 
			ResetScorePot 
			hide_console_window 
			GoalManager_LevelUnload 
			GoalManager_DeactivateAllGoals 
			IF NOT IsObserving 
				Skater : StatsManager_DeactivateGoals 
			ENDIF 
			ScreenElementSystemCleanup 
			IF NOT inNetGame 
				hide_everything 
			ENDIF 
			kill_blur 
			IF InSplitScreenGame 
				launch_two_player 
			ENDIF 
			ChangeLevel <...> 
		ENDSCRIPT
	*/
	0x01, 0x16, 0xDF, 0x01, 0xA8, 0xBF, 0x16, 0x9F, 0xDB, 0x97, 0xE9, 0x07, 0x17, 0x01, 0x00, 0x00,
	0x00, 0x01, 0x25, 0x16, 0x8B, 0x48, 0x28, 0x30, 0x16, 0x36, 0xB8, 0xB4, 0xE8, 0x01, 0x16, 0x49,
	0x8A, 0x42, 0x32, 0x01, 0x28, 0x01, 0x16, 0x6D, 0x7C, 0x64, 0x67, 0x01, 0x16, 0x93, 0x1F, 0x2B,
	0x6D, 0x17, 0x00, 0x00, 0x00, 0x00, 0x01, 0x25, 0x39, 0x16, 0x4B, 0x6B, 0xDA, 0x94, 0x01, 0x16,
	0x77, 0xB8, 0x8A, 0x5B, 0x42, 0x16, 0x7A, 0x06, 0xB3, 0xE9, 0x01, 0x28, 0x01, 0x25, 0x16, 0x31,
	0x21, 0x7B, 0x43, 0x16, 0xAF, 0x98, 0xC6, 0x40, 0x07, 0x16, 0xA7, 0x3F, 0xED, 0x06, 0x01, 0x16,
	0xA7, 0x3F, 0xED, 0x06, 0x42, 0x16, 0x7A, 0x06, 0xB3, 0xE9, 0x01, 0x28, 0x01, 0x16, 0xDF, 0x01,
	0xA8, 0xBF, 0x16, 0x2C, 0x66, 0xA5, 0x77, 0x07, 0x17, 0x00, 0x00, 0x00, 0x00, 0x01, 0x25, 0x16,
	0x7B, 0x71, 0x66, 0xCF, 0x16, 0x8E, 0x19, 0xC7, 0x4D, 0x01, 0x16, 0xDF, 0x01, 0xA8, 0xBF, 0x16,
	0x8E, 0x19, 0xC7, 0x4D, 0x07, 0x2D, 0x16, 0x8E, 0x19, 0xC7, 0x4D, 0x01, 0x28, 0x01, 0x25, 0x39,
	0x16, 0x4B, 0x6B, 0xDA, 0x94, 0x01, 0x16, 0x77, 0xB8, 0x8A, 0x5B, 0x42, 0x16, 0x42, 0x5C, 0xCA,
	0x11, 0x01, 0x28, 0x01, 0x25, 0x39, 0x16, 0x7B, 0x71, 0x66, 0xCF, 0x16, 0x02, 0x01, 0x65, 0x4D,
	0x01, 0x16, 0x0E, 0xC6, 0xE8, 0x2D, 0x1B, 0x17, 0x00, 0x00, 0x00, 0x70, 0x65, 0x72, 0x66, 0x6F,
	0x72, 0x6D, 0x69, 0x6E, 0x67, 0x20, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x55, 0x6E, 0x6C, 0x6F, 0x61,
	0x64, 0x00, 0x01, 0x16, 0x0E, 0x2E, 0x98, 0x95, 0x01, 0x28, 0x01, 0x16, 0x6D, 0x7C, 0x64, 0x67,
	0x01, 0x16, 0xB2, 0x61, 0xA6, 0x68, 0x01, 0x16, 0xA4, 0x0A, 0x61, 0x53, 0x01, 0x16, 0x0E, 0x2E,
	0x98, 0x95, 0x01, 0x16, 0xC2, 0x10, 0xB6, 0x6A, 0x01, 0x25, 0x39, 0x16, 0x4B, 0x6B, 0xDA, 0x94,
	0x01, 0x16, 0x77, 0xB8, 0x8A, 0x5B, 0x42, 0x16, 0x91, 0x59, 0x74, 0xF1, 0x01, 0x28, 0x01, 0x16,
	0x54, 0x6E, 0xA5, 0xF8, 0x01, 0x25, 0x39, 0x16, 0xE9, 0x6F, 0xDA, 0xA1, 0x01, 0x16, 0x06, 0x1A,
	0x25, 0xF4, 0x01, 0x28, 0x01, 0x16, 0x7D, 0x6E, 0xA6, 0xBD, 0x01, 0x25, 0x16, 0x60, 0x7E, 0xB8,
	0x9C, 0x01, 0x16, 0x70, 0x6D, 0x95, 0xDD, 0x01, 0x28, 0x01, 0x16, 0x4C, 0x0A, 0xE7, 0x5B, 0x2C,
	0x01, 0x24, 0x01
};